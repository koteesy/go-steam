// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: content_manifest.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EContentDeltaChunkDataLocation int32

const (
	EContentDeltaChunkDataLocation_k_EContentDeltaChunkDataLocationInProtobuf    EContentDeltaChunkDataLocation = 0
	EContentDeltaChunkDataLocation_k_EContentDeltaChunkDataLocationAfterProtobuf EContentDeltaChunkDataLocation = 1
)

// Enum value maps for EContentDeltaChunkDataLocation.
var (
	EContentDeltaChunkDataLocation_name = map[int32]string{
		0: "k_EContentDeltaChunkDataLocationInProtobuf",
		1: "k_EContentDeltaChunkDataLocationAfterProtobuf",
	}
	EContentDeltaChunkDataLocation_value = map[string]int32{
		"k_EContentDeltaChunkDataLocationInProtobuf":    0,
		"k_EContentDeltaChunkDataLocationAfterProtobuf": 1,
	}
)

func (x EContentDeltaChunkDataLocation) Enum() *EContentDeltaChunkDataLocation {
	p := new(EContentDeltaChunkDataLocation)
	*p = x
	return p
}

func (x EContentDeltaChunkDataLocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EContentDeltaChunkDataLocation) Descriptor() protoreflect.EnumDescriptor {
	return file_content_manifest_proto_enumTypes[0].Descriptor()
}

func (EContentDeltaChunkDataLocation) Type() protoreflect.EnumType {
	return &file_content_manifest_proto_enumTypes[0]
}

func (x EContentDeltaChunkDataLocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EContentDeltaChunkDataLocation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EContentDeltaChunkDataLocation(num)
	return nil
}

// Deprecated: Use EContentDeltaChunkDataLocation.Descriptor instead.
func (EContentDeltaChunkDataLocation) EnumDescriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{0}
}

type ContentManifestPayload struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Mappings      []*ContentManifestPayload_FileMapping `protobuf:"bytes,1,rep,name=mappings" json:"mappings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentManifestPayload) Reset() {
	*x = ContentManifestPayload{}
	mi := &file_content_manifest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentManifestPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentManifestPayload) ProtoMessage() {}

func (x *ContentManifestPayload) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentManifestPayload.ProtoReflect.Descriptor instead.
func (*ContentManifestPayload) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{0}
}

func (x *ContentManifestPayload) GetMappings() []*ContentManifestPayload_FileMapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

type ContentManifestMetadata struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DepotId            *uint32                `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	GidManifest        *uint64                `protobuf:"varint,2,opt,name=gid_manifest,json=gidManifest" json:"gid_manifest,omitempty"`
	CreationTime       *uint32                `protobuf:"varint,3,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	FilenamesEncrypted *bool                  `protobuf:"varint,4,opt,name=filenames_encrypted,json=filenamesEncrypted" json:"filenames_encrypted,omitempty"`
	CbDiskOriginal     *uint64                `protobuf:"varint,5,opt,name=cb_disk_original,json=cbDiskOriginal" json:"cb_disk_original,omitempty"`
	CbDiskCompressed   *uint64                `protobuf:"varint,6,opt,name=cb_disk_compressed,json=cbDiskCompressed" json:"cb_disk_compressed,omitempty"`
	UniqueChunks       *uint32                `protobuf:"varint,7,opt,name=unique_chunks,json=uniqueChunks" json:"unique_chunks,omitempty"`
	CrcEncrypted       *uint32                `protobuf:"varint,8,opt,name=crc_encrypted,json=crcEncrypted" json:"crc_encrypted,omitempty"`
	CrcClear           *uint32                `protobuf:"varint,9,opt,name=crc_clear,json=crcClear" json:"crc_clear,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ContentManifestMetadata) Reset() {
	*x = ContentManifestMetadata{}
	mi := &file_content_manifest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentManifestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentManifestMetadata) ProtoMessage() {}

func (x *ContentManifestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentManifestMetadata.ProtoReflect.Descriptor instead.
func (*ContentManifestMetadata) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{1}
}

func (x *ContentManifestMetadata) GetDepotId() uint32 {
	if x != nil && x.DepotId != nil {
		return *x.DepotId
	}
	return 0
}

func (x *ContentManifestMetadata) GetGidManifest() uint64 {
	if x != nil && x.GidManifest != nil {
		return *x.GidManifest
	}
	return 0
}

func (x *ContentManifestMetadata) GetCreationTime() uint32 {
	if x != nil && x.CreationTime != nil {
		return *x.CreationTime
	}
	return 0
}

func (x *ContentManifestMetadata) GetFilenamesEncrypted() bool {
	if x != nil && x.FilenamesEncrypted != nil {
		return *x.FilenamesEncrypted
	}
	return false
}

func (x *ContentManifestMetadata) GetCbDiskOriginal() uint64 {
	if x != nil && x.CbDiskOriginal != nil {
		return *x.CbDiskOriginal
	}
	return 0
}

func (x *ContentManifestMetadata) GetCbDiskCompressed() uint64 {
	if x != nil && x.CbDiskCompressed != nil {
		return *x.CbDiskCompressed
	}
	return 0
}

func (x *ContentManifestMetadata) GetUniqueChunks() uint32 {
	if x != nil && x.UniqueChunks != nil {
		return *x.UniqueChunks
	}
	return 0
}

func (x *ContentManifestMetadata) GetCrcEncrypted() uint32 {
	if x != nil && x.CrcEncrypted != nil {
		return *x.CrcEncrypted
	}
	return 0
}

func (x *ContentManifestMetadata) GetCrcClear() uint32 {
	if x != nil && x.CrcClear != nil {
		return *x.CrcClear
	}
	return 0
}

type ContentManifestSignature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentManifestSignature) Reset() {
	*x = ContentManifestSignature{}
	mi := &file_content_manifest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentManifestSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentManifestSignature) ProtoMessage() {}

func (x *ContentManifestSignature) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentManifestSignature.ProtoReflect.Descriptor instead.
func (*ContentManifestSignature) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{2}
}

func (x *ContentManifestSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ContentDeltaChunks struct {
	state             protoimpl.MessageState           `protogen:"open.v1"`
	DepotId           *uint32                          `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	ManifestIdSource  *uint64                          `protobuf:"varint,2,opt,name=manifest_id_source,json=manifestIdSource" json:"manifest_id_source,omitempty"`
	ManifestIdTarget  *uint64                          `protobuf:"varint,3,opt,name=manifest_id_target,json=manifestIdTarget" json:"manifest_id_target,omitempty"`
	DeltaChunks       []*ContentDeltaChunks_DeltaChunk `protobuf:"bytes,4,rep,name=deltaChunks" json:"deltaChunks,omitempty"`
	ChunkDataLocation *EContentDeltaChunkDataLocation  `protobuf:"varint,5,opt,name=chunk_data_location,json=chunkDataLocation,enum=EContentDeltaChunkDataLocation,def=0" json:"chunk_data_location,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for ContentDeltaChunks fields.
const (
	Default_ContentDeltaChunks_ChunkDataLocation = EContentDeltaChunkDataLocation_k_EContentDeltaChunkDataLocationInProtobuf
)

func (x *ContentDeltaChunks) Reset() {
	*x = ContentDeltaChunks{}
	mi := &file_content_manifest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentDeltaChunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentDeltaChunks) ProtoMessage() {}

func (x *ContentDeltaChunks) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentDeltaChunks.ProtoReflect.Descriptor instead.
func (*ContentDeltaChunks) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{3}
}

func (x *ContentDeltaChunks) GetDepotId() uint32 {
	if x != nil && x.DepotId != nil {
		return *x.DepotId
	}
	return 0
}

func (x *ContentDeltaChunks) GetManifestIdSource() uint64 {
	if x != nil && x.ManifestIdSource != nil {
		return *x.ManifestIdSource
	}
	return 0
}

func (x *ContentDeltaChunks) GetManifestIdTarget() uint64 {
	if x != nil && x.ManifestIdTarget != nil {
		return *x.ManifestIdTarget
	}
	return 0
}

func (x *ContentDeltaChunks) GetDeltaChunks() []*ContentDeltaChunks_DeltaChunk {
	if x != nil {
		return x.DeltaChunks
	}
	return nil
}

func (x *ContentDeltaChunks) GetChunkDataLocation() EContentDeltaChunkDataLocation {
	if x != nil && x.ChunkDataLocation != nil {
		return *x.ChunkDataLocation
	}
	return Default_ContentDeltaChunks_ChunkDataLocation
}

type ContentManifestPayload_FileMapping struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Filename      *string                                         `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Size          *uint64                                         `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Flags         *uint32                                         `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	ShaFilename   []byte                                          `protobuf:"bytes,4,opt,name=sha_filename,json=shaFilename" json:"sha_filename,omitempty"`
	ShaContent    []byte                                          `protobuf:"bytes,5,opt,name=sha_content,json=shaContent" json:"sha_content,omitempty"`
	Chunks        []*ContentManifestPayload_FileMapping_ChunkData `protobuf:"bytes,6,rep,name=chunks" json:"chunks,omitempty"`
	Linktarget    *string                                         `protobuf:"bytes,7,opt,name=linktarget" json:"linktarget,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentManifestPayload_FileMapping) Reset() {
	*x = ContentManifestPayload_FileMapping{}
	mi := &file_content_manifest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentManifestPayload_FileMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentManifestPayload_FileMapping) ProtoMessage() {}

func (x *ContentManifestPayload_FileMapping) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentManifestPayload_FileMapping.ProtoReflect.Descriptor instead.
func (*ContentManifestPayload_FileMapping) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ContentManifestPayload_FileMapping) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *ContentManifestPayload_FileMapping) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *ContentManifestPayload_FileMapping) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *ContentManifestPayload_FileMapping) GetShaFilename() []byte {
	if x != nil {
		return x.ShaFilename
	}
	return nil
}

func (x *ContentManifestPayload_FileMapping) GetShaContent() []byte {
	if x != nil {
		return x.ShaContent
	}
	return nil
}

func (x *ContentManifestPayload_FileMapping) GetChunks() []*ContentManifestPayload_FileMapping_ChunkData {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *ContentManifestPayload_FileMapping) GetLinktarget() string {
	if x != nil && x.Linktarget != nil {
		return *x.Linktarget
	}
	return ""
}

type ContentManifestPayload_FileMapping_ChunkData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sha           []byte                 `protobuf:"bytes,1,opt,name=sha" json:"sha,omitempty"`
	Crc           *uint32                `protobuf:"fixed32,2,opt,name=crc" json:"crc,omitempty"`
	Offset        *uint64                `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	CbOriginal    *uint32                `protobuf:"varint,4,opt,name=cb_original,json=cbOriginal" json:"cb_original,omitempty"`
	CbCompressed  *uint32                `protobuf:"varint,5,opt,name=cb_compressed,json=cbCompressed" json:"cb_compressed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentManifestPayload_FileMapping_ChunkData) Reset() {
	*x = ContentManifestPayload_FileMapping_ChunkData{}
	mi := &file_content_manifest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentManifestPayload_FileMapping_ChunkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentManifestPayload_FileMapping_ChunkData) ProtoMessage() {}

func (x *ContentManifestPayload_FileMapping_ChunkData) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentManifestPayload_FileMapping_ChunkData.ProtoReflect.Descriptor instead.
func (*ContentManifestPayload_FileMapping_ChunkData) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ContentManifestPayload_FileMapping_ChunkData) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *ContentManifestPayload_FileMapping_ChunkData) GetCrc() uint32 {
	if x != nil && x.Crc != nil {
		return *x.Crc
	}
	return 0
}

func (x *ContentManifestPayload_FileMapping_ChunkData) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ContentManifestPayload_FileMapping_ChunkData) GetCbOriginal() uint32 {
	if x != nil && x.CbOriginal != nil {
		return *x.CbOriginal
	}
	return 0
}

func (x *ContentManifestPayload_FileMapping_ChunkData) GetCbCompressed() uint32 {
	if x != nil && x.CbCompressed != nil {
		return *x.CbCompressed
	}
	return 0
}

type ContentDeltaChunks_DeltaChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShaSource     []byte                 `protobuf:"bytes,1,opt,name=sha_source,json=shaSource" json:"sha_source,omitempty"`
	ShaTarget     []byte                 `protobuf:"bytes,2,opt,name=sha_target,json=shaTarget" json:"sha_target,omitempty"`
	SizeOriginal  *uint32                `protobuf:"varint,3,opt,name=size_original,json=sizeOriginal" json:"size_original,omitempty"`
	PatchMethod   *uint32                `protobuf:"varint,4,opt,name=patch_method,json=patchMethod" json:"patch_method,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,5,opt,name=chunk" json:"chunk,omitempty"`
	SizeDelta     *uint32                `protobuf:"varint,6,opt,name=size_delta,json=sizeDelta" json:"size_delta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContentDeltaChunks_DeltaChunk) Reset() {
	*x = ContentDeltaChunks_DeltaChunk{}
	mi := &file_content_manifest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentDeltaChunks_DeltaChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentDeltaChunks_DeltaChunk) ProtoMessage() {}

func (x *ContentDeltaChunks_DeltaChunk) ProtoReflect() protoreflect.Message {
	mi := &file_content_manifest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentDeltaChunks_DeltaChunk.ProtoReflect.Descriptor instead.
func (*ContentDeltaChunks_DeltaChunk) Descriptor() ([]byte, []int) {
	return file_content_manifest_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ContentDeltaChunks_DeltaChunk) GetShaSource() []byte {
	if x != nil {
		return x.ShaSource
	}
	return nil
}

func (x *ContentDeltaChunks_DeltaChunk) GetShaTarget() []byte {
	if x != nil {
		return x.ShaTarget
	}
	return nil
}

func (x *ContentDeltaChunks_DeltaChunk) GetSizeOriginal() uint32 {
	if x != nil && x.SizeOriginal != nil {
		return *x.SizeOriginal
	}
	return 0
}

func (x *ContentDeltaChunks_DeltaChunk) GetPatchMethod() uint32 {
	if x != nil && x.PatchMethod != nil {
		return *x.PatchMethod
	}
	return 0
}

func (x *ContentDeltaChunks_DeltaChunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *ContentDeltaChunks_DeltaChunk) GetSizeDelta() uint32 {
	if x != nil && x.SizeDelta != nil {
		return *x.SizeDelta
	}
	return 0
}

var File_content_manifest_proto protoreflect.FileDescriptor

const file_content_manifest_proto_rawDesc = "" +
	"\n" +
	"\x16content_manifest.proto\"\xea\x03\n" +
	"\x16ContentManifestPayload\x12?\n" +
	"\bmappings\x18\x01 \x03(\v2#.ContentManifestPayload.FileMappingR\bmappings\x1a\x8e\x03\n" +
	"\vFileMapping\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x04R\x04size\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\rR\x05flags\x12!\n" +
	"\fsha_filename\x18\x04 \x01(\fR\vshaFilename\x12\x1f\n" +
	"\vsha_content\x18\x05 \x01(\fR\n" +
	"shaContent\x12E\n" +
	"\x06chunks\x18\x06 \x03(\v2-.ContentManifestPayload.FileMapping.ChunkDataR\x06chunks\x12\x1e\n" +
	"\n" +
	"linktarget\x18\a \x01(\tR\n" +
	"linktarget\x1a\x8d\x01\n" +
	"\tChunkData\x12\x10\n" +
	"\x03sha\x18\x01 \x01(\fR\x03sha\x12\x10\n" +
	"\x03crc\x18\x02 \x01(\aR\x03crc\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x04R\x06offset\x12\x1f\n" +
	"\vcb_original\x18\x04 \x01(\rR\n" +
	"cbOriginal\x12#\n" +
	"\rcb_compressed\x18\x05 \x01(\rR\fcbCompressed\"\xec\x02\n" +
	"\x17ContentManifestMetadata\x12\x19\n" +
	"\bdepot_id\x18\x01 \x01(\rR\adepotId\x12!\n" +
	"\fgid_manifest\x18\x02 \x01(\x04R\vgidManifest\x12#\n" +
	"\rcreation_time\x18\x03 \x01(\rR\fcreationTime\x12/\n" +
	"\x13filenames_encrypted\x18\x04 \x01(\bR\x12filenamesEncrypted\x12(\n" +
	"\x10cb_disk_original\x18\x05 \x01(\x04R\x0ecbDiskOriginal\x12,\n" +
	"\x12cb_disk_compressed\x18\x06 \x01(\x04R\x10cbDiskCompressed\x12#\n" +
	"\runique_chunks\x18\a \x01(\rR\funiqueChunks\x12#\n" +
	"\rcrc_encrypted\x18\b \x01(\rR\fcrcEncrypted\x12\x1b\n" +
	"\tcrc_clear\x18\t \x01(\rR\bcrcClear\"8\n" +
	"\x18ContentManifestSignature\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\"\x94\x04\n" +
	"\x12ContentDeltaChunks\x12\x19\n" +
	"\bdepot_id\x18\x01 \x01(\rR\adepotId\x12,\n" +
	"\x12manifest_id_source\x18\x02 \x01(\x04R\x10manifestIdSource\x12,\n" +
	"\x12manifest_id_target\x18\x03 \x01(\x04R\x10manifestIdTarget\x12@\n" +
	"\vdeltaChunks\x18\x04 \x03(\v2\x1e.ContentDeltaChunks.DeltaChunkR\vdeltaChunks\x12{\n" +
	"\x13chunk_data_location\x18\x05 \x01(\x0e2\x1f.EContentDeltaChunkDataLocation:*k_EContentDeltaChunkDataLocationInProtobufR\x11chunkDataLocation\x1a\xc7\x01\n" +
	"\n" +
	"DeltaChunk\x12\x1d\n" +
	"\n" +
	"sha_source\x18\x01 \x01(\fR\tshaSource\x12\x1d\n" +
	"\n" +
	"sha_target\x18\x02 \x01(\fR\tshaTarget\x12#\n" +
	"\rsize_original\x18\x03 \x01(\rR\fsizeOriginal\x12!\n" +
	"\fpatch_method\x18\x04 \x01(\rR\vpatchMethod\x12\x14\n" +
	"\x05chunk\x18\x05 \x01(\fR\x05chunk\x12\x1d\n" +
	"\n" +
	"size_delta\x18\x06 \x01(\rR\tsizeDelta*\x83\x01\n" +
	"\x1eEContentDeltaChunkDataLocation\x12.\n" +
	"*k_EContentDeltaChunkDataLocationInProtobuf\x10\x00\x121\n" +
	"-k_EContentDeltaChunkDataLocationAfterProtobuf\x10\x01B\x05H\x01\x80\x01\x00"

var (
	file_content_manifest_proto_rawDescOnce sync.Once
	file_content_manifest_proto_rawDescData []byte
)

func file_content_manifest_proto_rawDescGZIP() []byte {
	file_content_manifest_proto_rawDescOnce.Do(func() {
		file_content_manifest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_content_manifest_proto_rawDesc), len(file_content_manifest_proto_rawDesc)))
	})
	return file_content_manifest_proto_rawDescData
}

var file_content_manifest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_content_manifest_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_content_manifest_proto_goTypes = []any{
	(EContentDeltaChunkDataLocation)(0),                  // 0: EContentDeltaChunkDataLocation
	(*ContentManifestPayload)(nil),                       // 1: ContentManifestPayload
	(*ContentManifestMetadata)(nil),                      // 2: ContentManifestMetadata
	(*ContentManifestSignature)(nil),                     // 3: ContentManifestSignature
	(*ContentDeltaChunks)(nil),                           // 4: ContentDeltaChunks
	(*ContentManifestPayload_FileMapping)(nil),           // 5: ContentManifestPayload.FileMapping
	(*ContentManifestPayload_FileMapping_ChunkData)(nil), // 6: ContentManifestPayload.FileMapping.ChunkData
	(*ContentDeltaChunks_DeltaChunk)(nil),                // 7: ContentDeltaChunks.DeltaChunk
}
var file_content_manifest_proto_depIdxs = []int32{
	5, // 0: ContentManifestPayload.mappings:type_name -> ContentManifestPayload.FileMapping
	7, // 1: ContentDeltaChunks.deltaChunks:type_name -> ContentDeltaChunks.DeltaChunk
	0, // 2: ContentDeltaChunks.chunk_data_location:type_name -> EContentDeltaChunkDataLocation
	6, // 3: ContentManifestPayload.FileMapping.chunks:type_name -> ContentManifestPayload.FileMapping.ChunkData
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_content_manifest_proto_init() }
func file_content_manifest_proto_init() {
	if File_content_manifest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_content_manifest_proto_rawDesc), len(file_content_manifest_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_content_manifest_proto_goTypes,
		DependencyIndexes: file_content_manifest_proto_depIdxs,
		EnumInfos:         file_content_manifest_proto_enumTypes,
		MessageInfos:      file_content_manifest_proto_msgTypes,
	}.Build()
	File_content_manifest_proto = out.File
	file_content_manifest_proto_goTypes = nil
	file_content_manifest_proto_depIdxs = nil
}
