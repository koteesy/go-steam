// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: steammessages_partnerapps.steamclient.proto

package unified

import (
	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPartnerApps_RequestUploadToken_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      *string                `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Appid         *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_RequestUploadToken_Request) Reset() {
	*x = CPartnerApps_RequestUploadToken_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_RequestUploadToken_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_RequestUploadToken_Request) ProtoMessage() {}

func (x *CPartnerApps_RequestUploadToken_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_RequestUploadToken_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_RequestUploadToken_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CPartnerApps_RequestUploadToken_Request) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CPartnerApps_RequestUploadToken_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPartnerApps_RequestUploadToken_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   *uint64                `protobuf:"varint,1,opt,name=upload_token,json=uploadToken" json:"upload_token,omitempty"`
	Location      *string                `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	RoutingId     *uint64                `protobuf:"varint,3,opt,name=routing_id,json=routingId" json:"routing_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_RequestUploadToken_Response) Reset() {
	*x = CPartnerApps_RequestUploadToken_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_RequestUploadToken_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_RequestUploadToken_Response) ProtoMessage() {}

func (x *CPartnerApps_RequestUploadToken_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_RequestUploadToken_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_RequestUploadToken_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CPartnerApps_RequestUploadToken_Response) GetUploadToken() uint64 {
	if x != nil && x.UploadToken != nil {
		return *x.UploadToken
	}
	return 0
}

func (x *CPartnerApps_RequestUploadToken_Response) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *CPartnerApps_RequestUploadToken_Response) GetRoutingId() uint64 {
	if x != nil && x.RoutingId != nil {
		return *x.RoutingId
	}
	return 0
}

type CPartnerApps_FinishUpload_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   *uint64                `protobuf:"varint,1,opt,name=upload_token,json=uploadToken" json:"upload_token,omitempty"`
	RoutingId     *uint64                `protobuf:"varint,2,opt,name=routing_id,json=routingId" json:"routing_id,omitempty"`
	AppId         *uint32                `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUpload_Request) Reset() {
	*x = CPartnerApps_FinishUpload_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUpload_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUpload_Request) ProtoMessage() {}

func (x *CPartnerApps_FinishUpload_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUpload_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUpload_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CPartnerApps_FinishUpload_Request) GetUploadToken() uint64 {
	if x != nil && x.UploadToken != nil {
		return *x.UploadToken
	}
	return 0
}

func (x *CPartnerApps_FinishUpload_Request) GetRoutingId() uint64 {
	if x != nil && x.RoutingId != nil {
		return *x.RoutingId
	}
	return 0
}

func (x *CPartnerApps_FinishUpload_Request) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CPartnerApps_FinishUploadKVSign_Response struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SignedInstallscript *string                `protobuf:"bytes,1,opt,name=signed_installscript,json=signedInstallscript" json:"signed_installscript,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUploadKVSign_Response) Reset() {
	*x = CPartnerApps_FinishUploadKVSign_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUploadKVSign_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUploadKVSign_Response) ProtoMessage() {}

func (x *CPartnerApps_FinishUploadKVSign_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUploadKVSign_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUploadKVSign_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CPartnerApps_FinishUploadKVSign_Response) GetSignedInstallscript() string {
	if x != nil && x.SignedInstallscript != nil {
		return *x.SignedInstallscript
	}
	return ""
}

type CPartnerApps_FinishUploadLegacyDRM_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   *uint64                `protobuf:"varint,1,opt,name=upload_token,json=uploadToken" json:"upload_token,omitempty"`
	RoutingId     *uint64                `protobuf:"varint,2,opt,name=routing_id,json=routingId" json:"routing_id,omitempty"`
	AppId         *uint32                `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Flags         *uint32                `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
	ToolName      *string                `protobuf:"bytes,5,opt,name=tool_name,json=toolName" json:"tool_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) Reset() {
	*x = CPartnerApps_FinishUploadLegacyDRM_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUploadLegacyDRM_Request) ProtoMessage() {}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUploadLegacyDRM_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUploadLegacyDRM_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) GetUploadToken() uint64 {
	if x != nil && x.UploadToken != nil {
		return *x.UploadToken
	}
	return 0
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) GetRoutingId() uint64 {
	if x != nil && x.RoutingId != nil {
		return *x.RoutingId
	}
	return 0
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Request) GetToolName() string {
	if x != nil && x.ToolName != nil {
		return *x.ToolName
	}
	return ""
}

type CPartnerApps_FinishUploadLegacyDRM_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Response) Reset() {
	*x = CPartnerApps_FinishUploadLegacyDRM_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUploadLegacyDRM_Response) ProtoMessage() {}

func (x *CPartnerApps_FinishUploadLegacyDRM_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUploadLegacyDRM_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUploadLegacyDRM_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CPartnerApps_FinishUploadLegacyDRM_Response) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

type CPartnerApps_FinishUpload_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUpload_Response) Reset() {
	*x = CPartnerApps_FinishUpload_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUpload_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUpload_Response) ProtoMessage() {}

func (x *CPartnerApps_FinishUpload_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUpload_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUpload_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{6}
}

type CPartnerApps_FinishUploadDepot_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   *uint64                `protobuf:"varint,1,opt,name=upload_token,json=uploadToken" json:"upload_token,omitempty"`
	RoutingId     *uint64                `protobuf:"varint,2,opt,name=routing_id,json=routingId" json:"routing_id,omitempty"`
	AppId         *uint32                `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	DepotId       *uint32                `protobuf:"varint,4,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	BuildFlags    *uint32                `protobuf:"varint,5,opt,name=build_flags,json=buildFlags" json:"build_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUploadDepot_Request) Reset() {
	*x = CPartnerApps_FinishUploadDepot_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUploadDepot_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUploadDepot_Request) ProtoMessage() {}

func (x *CPartnerApps_FinishUploadDepot_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUploadDepot_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUploadDepot_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CPartnerApps_FinishUploadDepot_Request) GetUploadToken() uint64 {
	if x != nil && x.UploadToken != nil {
		return *x.UploadToken
	}
	return 0
}

func (x *CPartnerApps_FinishUploadDepot_Request) GetRoutingId() uint64 {
	if x != nil && x.RoutingId != nil {
		return *x.RoutingId
	}
	return 0
}

func (x *CPartnerApps_FinishUploadDepot_Request) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CPartnerApps_FinishUploadDepot_Request) GetDepotId() uint32 {
	if x != nil && x.DepotId != nil {
		return *x.DepotId
	}
	return 0
}

func (x *CPartnerApps_FinishUploadDepot_Request) GetBuildFlags() uint32 {
	if x != nil && x.BuildFlags != nil {
		return *x.BuildFlags
	}
	return 0
}

type CPartnerApps_FinishUploadDepot_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FinishUploadDepot_Response) Reset() {
	*x = CPartnerApps_FinishUploadDepot_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FinishUploadDepot_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FinishUploadDepot_Response) ProtoMessage() {}

func (x *CPartnerApps_FinishUploadDepot_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FinishUploadDepot_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FinishUploadDepot_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{8}
}

type CPartnerApps_GetDepotBuildResult_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadToken   *uint64                `protobuf:"varint,1,opt,name=upload_token,json=uploadToken" json:"upload_token,omitempty"`
	RoutingId     *uint64                `protobuf:"varint,2,opt,name=routing_id,json=routingId" json:"routing_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_GetDepotBuildResult_Request) Reset() {
	*x = CPartnerApps_GetDepotBuildResult_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_GetDepotBuildResult_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_GetDepotBuildResult_Request) ProtoMessage() {}

func (x *CPartnerApps_GetDepotBuildResult_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_GetDepotBuildResult_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_GetDepotBuildResult_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CPartnerApps_GetDepotBuildResult_Request) GetUploadToken() uint64 {
	if x != nil && x.UploadToken != nil {
		return *x.UploadToken
	}
	return 0
}

func (x *CPartnerApps_GetDepotBuildResult_Request) GetRoutingId() uint64 {
	if x != nil && x.RoutingId != nil {
		return *x.RoutingId
	}
	return 0
}

type CPartnerApps_GetDepotBuildResult_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ManifestId    *uint64                `protobuf:"varint,1,opt,name=manifest_id,json=manifestId" json:"manifest_id,omitempty"`
	ErrorMsg      *string                `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg" json:"error_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_GetDepotBuildResult_Response) Reset() {
	*x = CPartnerApps_GetDepotBuildResult_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_GetDepotBuildResult_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_GetDepotBuildResult_Response) ProtoMessage() {}

func (x *CPartnerApps_GetDepotBuildResult_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_GetDepotBuildResult_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_GetDepotBuildResult_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CPartnerApps_GetDepotBuildResult_Response) GetManifestId() uint64 {
	if x != nil && x.ManifestId != nil {
		return *x.ManifestId
	}
	return 0
}

func (x *CPartnerApps_GetDepotBuildResult_Response) GetErrorMsg() string {
	if x != nil && x.ErrorMsg != nil {
		return *x.ErrorMsg
	}
	return ""
}

type CPartnerApps_FindDRMUploads_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *int32                 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FindDRMUploads_Request) Reset() {
	*x = CPartnerApps_FindDRMUploads_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FindDRMUploads_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FindDRMUploads_Request) ProtoMessage() {}

func (x *CPartnerApps_FindDRMUploads_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FindDRMUploads_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FindDRMUploads_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{11}
}

func (x *CPartnerApps_FindDRMUploads_Request) GetAppId() int32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CPartnerApps_ExistingDRMUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	AppId         *uint32                `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ActorId       *int32                 `protobuf:"varint,3,opt,name=actor_id,json=actorId" json:"actor_id,omitempty"`
	SuppliedName  *string                `protobuf:"bytes,5,opt,name=supplied_name,json=suppliedName" json:"supplied_name,omitempty"`
	Flags         *uint32                `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	ModType       *string                `protobuf:"bytes,7,opt,name=mod_type,json=modType" json:"mod_type,omitempty"`
	Timestamp     *uint32                `protobuf:"fixed32,8,opt,name=timestamp" json:"timestamp,omitempty"`
	OrigFileId    *string                `protobuf:"bytes,9,opt,name=orig_file_id,json=origFileId" json:"orig_file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_ExistingDRMUpload) Reset() {
	*x = CPartnerApps_ExistingDRMUpload{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_ExistingDRMUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_ExistingDRMUpload) ProtoMessage() {}

func (x *CPartnerApps_ExistingDRMUpload) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_ExistingDRMUpload.ProtoReflect.Descriptor instead.
func (*CPartnerApps_ExistingDRMUpload) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{12}
}

func (x *CPartnerApps_ExistingDRMUpload) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *CPartnerApps_ExistingDRMUpload) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CPartnerApps_ExistingDRMUpload) GetActorId() int32 {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return 0
}

func (x *CPartnerApps_ExistingDRMUpload) GetSuppliedName() string {
	if x != nil && x.SuppliedName != nil {
		return *x.SuppliedName
	}
	return ""
}

func (x *CPartnerApps_ExistingDRMUpload) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CPartnerApps_ExistingDRMUpload) GetModType() string {
	if x != nil && x.ModType != nil {
		return *x.ModType
	}
	return ""
}

func (x *CPartnerApps_ExistingDRMUpload) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CPartnerApps_ExistingDRMUpload) GetOrigFileId() string {
	if x != nil && x.OrigFileId != nil {
		return *x.OrigFileId
	}
	return ""
}

type CPartnerApps_FindDRMUploads_Response struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Uploads       []*CPartnerApps_ExistingDRMUpload `protobuf:"bytes,1,rep,name=uploads" json:"uploads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_FindDRMUploads_Response) Reset() {
	*x = CPartnerApps_FindDRMUploads_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_FindDRMUploads_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_FindDRMUploads_Response) ProtoMessage() {}

func (x *CPartnerApps_FindDRMUploads_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_FindDRMUploads_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_FindDRMUploads_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{13}
}

func (x *CPartnerApps_FindDRMUploads_Response) GetUploads() []*CPartnerApps_ExistingDRMUpload {
	if x != nil {
		return x.Uploads
	}
	return nil
}

type CPartnerApps_Download_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        *string                `protobuf:"bytes,1,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	AppId         *int32                 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_Download_Request) Reset() {
	*x = CPartnerApps_Download_Request{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_Download_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_Download_Request) ProtoMessage() {}

func (x *CPartnerApps_Download_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_Download_Request.ProtoReflect.Descriptor instead.
func (*CPartnerApps_Download_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{14}
}

func (x *CPartnerApps_Download_Request) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *CPartnerApps_Download_Request) GetAppId() int32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CPartnerApps_Download_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DownloadUrl   *string                `protobuf:"bytes,1,opt,name=download_url,json=downloadUrl" json:"download_url,omitempty"`
	AppId         *int32                 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerApps_Download_Response) Reset() {
	*x = CPartnerApps_Download_Response{}
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerApps_Download_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerApps_Download_Response) ProtoMessage() {}

func (x *CPartnerApps_Download_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_partnerapps_steamclient_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerApps_Download_Response.ProtoReflect.Descriptor instead.
func (*CPartnerApps_Download_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_partnerapps_steamclient_proto_rawDescGZIP(), []int{15}
}

func (x *CPartnerApps_Download_Response) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *CPartnerApps_Download_Response) GetAppId() int32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

var File_steammessages_partnerapps_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_partnerapps_steamclient_proto_rawDesc = "" +
	"\n" +
	"+steammessages_partnerapps.steamclient.proto\x1a,steammessages_unified_base.steamclient.proto\"[\n" +
	"'CPartnerApps_RequestUploadToken_Request\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\"\x88\x01\n" +
	"(CPartnerApps_RequestUploadToken_Response\x12!\n" +
	"\fupload_token\x18\x01 \x01(\x04R\vuploadToken\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"routing_id\x18\x03 \x01(\x04R\troutingId\"|\n" +
	"!CPartnerApps_FinishUpload_Request\x12!\n" +
	"\fupload_token\x18\x01 \x01(\x04R\vuploadToken\x12\x1d\n" +
	"\n" +
	"routing_id\x18\x02 \x01(\x04R\troutingId\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\rR\x05appId\"]\n" +
	"(CPartnerApps_FinishUploadKVSign_Response\x121\n" +
	"\x14signed_installscript\x18\x01 \x01(\tR\x13signedInstallscript\"\xb8\x01\n" +
	"*CPartnerApps_FinishUploadLegacyDRM_Request\x12!\n" +
	"\fupload_token\x18\x01 \x01(\x04R\vuploadToken\x12\x1d\n" +
	"\n" +
	"routing_id\x18\x02 \x01(\x04R\troutingId\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\rR\x05appId\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\rR\x05flags\x12\x1b\n" +
	"\ttool_name\x18\x05 \x01(\tR\btoolName\"F\n" +
	"+CPartnerApps_FinishUploadLegacyDRM_Response\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\"$\n" +
	"\"CPartnerApps_FinishUpload_Response\"\xbd\x01\n" +
	"&CPartnerApps_FinishUploadDepot_Request\x12!\n" +
	"\fupload_token\x18\x01 \x01(\x04R\vuploadToken\x12\x1d\n" +
	"\n" +
	"routing_id\x18\x02 \x01(\x04R\troutingId\x12\x15\n" +
	"\x06app_id\x18\x03 \x01(\rR\x05appId\x12\x19\n" +
	"\bdepot_id\x18\x04 \x01(\rR\adepotId\x12\x1f\n" +
	"\vbuild_flags\x18\x05 \x01(\rR\n" +
	"buildFlags\")\n" +
	"'CPartnerApps_FinishUploadDepot_Response\"l\n" +
	"(CPartnerApps_GetDepotBuildResult_Request\x12!\n" +
	"\fupload_token\x18\x01 \x01(\x04R\vuploadToken\x12\x1d\n" +
	"\n" +
	"routing_id\x18\x02 \x01(\x04R\troutingId\"i\n" +
	")CPartnerApps_GetDepotBuildResult_Response\x12\x1f\n" +
	"\vmanifest_id\x18\x01 \x01(\x04R\n" +
	"manifestId\x12\x1b\n" +
	"\terror_msg\x18\x02 \x01(\tR\berrorMsg\"<\n" +
	"#CPartnerApps_FindDRMUploads_Request\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\x05R\x05appId\"\x81\x02\n" +
	"\x1eCPartnerApps_ExistingDRMUpload\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\rR\x05appId\x12\x19\n" +
	"\bactor_id\x18\x03 \x01(\x05R\aactorId\x12#\n" +
	"\rsupplied_name\x18\x05 \x01(\tR\fsuppliedName\x12\x14\n" +
	"\x05flags\x18\x06 \x01(\rR\x05flags\x12\x19\n" +
	"\bmod_type\x18\a \x01(\tR\amodType\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\aR\ttimestamp\x12 \n" +
	"\forig_file_id\x18\t \x01(\tR\n" +
	"origFileId\"a\n" +
	"$CPartnerApps_FindDRMUploads_Response\x129\n" +
	"\auploads\x18\x01 \x03(\v2\x1f.CPartnerApps_ExistingDRMUploadR\auploads\"O\n" +
	"\x1dCPartnerApps_Download_Request\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\x05R\x05appId\"Z\n" +
	"\x1eCPartnerApps_Download_Response\x12!\n" +
	"\fdownload_url\x18\x01 \x01(\tR\vdownloadUrl\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\x05R\x05appId2\xa1\x0e\n" +
	"\vPartnerApps\x12\xb1\x01\n" +
	"\x18RequestKVSignUploadToken\x12(.CPartnerApps_RequestUploadToken_Request\x1a).CPartnerApps_RequestUploadToken_Response\"@\x82\xb5\x18<Request upload token for installscript file upload / signing\x12\xae\x01\n" +
	"\x15RequestDRMUploadToken\x12(.CPartnerApps_RequestUploadToken_Request\x1a).CPartnerApps_RequestUploadToken_Response\"@\x82\xb5\x18<Request upload token for executable file upload / processing\x12\xb5\x01\n" +
	"\x15RequestCEGUploadToken\x12(.CPartnerApps_RequestUploadToken_Request\x1a).CPartnerApps_RequestUploadToken_Response\"G\x82\xb5\x18CRequest upload token for custom executable file upload / processing\x12\xa3\x01\n" +
	"\x17RequestDepotUploadToken\x12(.CPartnerApps_RequestUploadToken_Request\x1a).CPartnerApps_RequestUploadToken_Response\"3\x82\xb5\x18/Request upload token for steampipe depot upload\x12\xab\x01\n" +
	"\x12FinishUploadKVSign\x12\".CPartnerApps_FinishUpload_Request\x1a).CPartnerApps_FinishUploadKVSign_Response\"F\x82\xb5\x18BCommit method to sign an installscript after an upload is complete\x12\xa4\x01\n" +
	"\x15FinishUploadDRMUpload\x12+.CPartnerApps_FinishUploadLegacyDRM_Request\x1a,.CPartnerApps_FinishUploadLegacyDRM_Response\"0\x82\xb5\x18,Commit method for executable file processing\x12\x99\x01\n" +
	"\x15FinishUploadCEGUpload\x12\".CPartnerApps_FinishUpload_Request\x1a#.CPartnerApps_FinishUpload_Response\"7\x82\xb5\x183Commit method for custom executable file processing\x12\xa5\x01\n" +
	"\x17FinishUploadDepotUpload\x12'.CPartnerApps_FinishUploadDepot_Request\x1a(.CPartnerApps_FinishUploadDepot_Response\"7\x82\xb5\x183Commit method for custom executable file processing\x12\xa4\x01\n" +
	"\x13GetDepotBuildResult\x12).CPartnerApps_GetDepotBuildResult_Request\x1a*.CPartnerApps_GetDepotBuildResult_Response\"6\x82\xb5\x182Get build status for previously uploaded depot ZIP\x12\x8d\x01\n" +
	"\x0eFindDRMUploads\x12$.CPartnerApps_FindDRMUploads_Request\x1a%.CPartnerApps_FindDRMUploads_Response\".\x82\xb5\x18*Finds N most recent prior uploads by appid\x12K\n" +
	"\bDownload\x12\x1e.CPartnerApps_Download_Request\x1a\x1f.CPartnerApps_Download_Response\x1a2\x82\xb5\x18.Service methods for app management by partnersB\x03\x80\x01\x01"

var (
	file_steammessages_partnerapps_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_partnerapps_steamclient_proto_rawDescData []byte
)

func file_steammessages_partnerapps_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_partnerapps_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_partnerapps_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_partnerapps_steamclient_proto_rawDesc), len(file_steammessages_partnerapps_steamclient_proto_rawDesc)))
	})
	return file_steammessages_partnerapps_steamclient_proto_rawDescData
}

var file_steammessages_partnerapps_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_steammessages_partnerapps_steamclient_proto_goTypes = []any{
	(*CPartnerApps_RequestUploadToken_Request)(nil),     // 0: CPartnerApps_RequestUploadToken_Request
	(*CPartnerApps_RequestUploadToken_Response)(nil),    // 1: CPartnerApps_RequestUploadToken_Response
	(*CPartnerApps_FinishUpload_Request)(nil),           // 2: CPartnerApps_FinishUpload_Request
	(*CPartnerApps_FinishUploadKVSign_Response)(nil),    // 3: CPartnerApps_FinishUploadKVSign_Response
	(*CPartnerApps_FinishUploadLegacyDRM_Request)(nil),  // 4: CPartnerApps_FinishUploadLegacyDRM_Request
	(*CPartnerApps_FinishUploadLegacyDRM_Response)(nil), // 5: CPartnerApps_FinishUploadLegacyDRM_Response
	(*CPartnerApps_FinishUpload_Response)(nil),          // 6: CPartnerApps_FinishUpload_Response
	(*CPartnerApps_FinishUploadDepot_Request)(nil),      // 7: CPartnerApps_FinishUploadDepot_Request
	(*CPartnerApps_FinishUploadDepot_Response)(nil),     // 8: CPartnerApps_FinishUploadDepot_Response
	(*CPartnerApps_GetDepotBuildResult_Request)(nil),    // 9: CPartnerApps_GetDepotBuildResult_Request
	(*CPartnerApps_GetDepotBuildResult_Response)(nil),   // 10: CPartnerApps_GetDepotBuildResult_Response
	(*CPartnerApps_FindDRMUploads_Request)(nil),         // 11: CPartnerApps_FindDRMUploads_Request
	(*CPartnerApps_ExistingDRMUpload)(nil),              // 12: CPartnerApps_ExistingDRMUpload
	(*CPartnerApps_FindDRMUploads_Response)(nil),        // 13: CPartnerApps_FindDRMUploads_Response
	(*CPartnerApps_Download_Request)(nil),               // 14: CPartnerApps_Download_Request
	(*CPartnerApps_Download_Response)(nil),              // 15: CPartnerApps_Download_Response
}
var file_steammessages_partnerapps_steamclient_proto_depIdxs = []int32{
	12, // 0: CPartnerApps_FindDRMUploads_Response.uploads:type_name -> CPartnerApps_ExistingDRMUpload
	0,  // 1: PartnerApps.RequestKVSignUploadToken:input_type -> CPartnerApps_RequestUploadToken_Request
	0,  // 2: PartnerApps.RequestDRMUploadToken:input_type -> CPartnerApps_RequestUploadToken_Request
	0,  // 3: PartnerApps.RequestCEGUploadToken:input_type -> CPartnerApps_RequestUploadToken_Request
	0,  // 4: PartnerApps.RequestDepotUploadToken:input_type -> CPartnerApps_RequestUploadToken_Request
	2,  // 5: PartnerApps.FinishUploadKVSign:input_type -> CPartnerApps_FinishUpload_Request
	4,  // 6: PartnerApps.FinishUploadDRMUpload:input_type -> CPartnerApps_FinishUploadLegacyDRM_Request
	2,  // 7: PartnerApps.FinishUploadCEGUpload:input_type -> CPartnerApps_FinishUpload_Request
	7,  // 8: PartnerApps.FinishUploadDepotUpload:input_type -> CPartnerApps_FinishUploadDepot_Request
	9,  // 9: PartnerApps.GetDepotBuildResult:input_type -> CPartnerApps_GetDepotBuildResult_Request
	11, // 10: PartnerApps.FindDRMUploads:input_type -> CPartnerApps_FindDRMUploads_Request
	14, // 11: PartnerApps.Download:input_type -> CPartnerApps_Download_Request
	1,  // 12: PartnerApps.RequestKVSignUploadToken:output_type -> CPartnerApps_RequestUploadToken_Response
	1,  // 13: PartnerApps.RequestDRMUploadToken:output_type -> CPartnerApps_RequestUploadToken_Response
	1,  // 14: PartnerApps.RequestCEGUploadToken:output_type -> CPartnerApps_RequestUploadToken_Response
	1,  // 15: PartnerApps.RequestDepotUploadToken:output_type -> CPartnerApps_RequestUploadToken_Response
	3,  // 16: PartnerApps.FinishUploadKVSign:output_type -> CPartnerApps_FinishUploadKVSign_Response
	5,  // 17: PartnerApps.FinishUploadDRMUpload:output_type -> CPartnerApps_FinishUploadLegacyDRM_Response
	6,  // 18: PartnerApps.FinishUploadCEGUpload:output_type -> CPartnerApps_FinishUpload_Response
	8,  // 19: PartnerApps.FinishUploadDepotUpload:output_type -> CPartnerApps_FinishUploadDepot_Response
	10, // 20: PartnerApps.GetDepotBuildResult:output_type -> CPartnerApps_GetDepotBuildResult_Response
	13, // 21: PartnerApps.FindDRMUploads:output_type -> CPartnerApps_FindDRMUploads_Response
	15, // 22: PartnerApps.Download:output_type -> CPartnerApps_Download_Response
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_steammessages_partnerapps_steamclient_proto_init() }
func file_steammessages_partnerapps_steamclient_proto_init() {
	if File_steammessages_partnerapps_steamclient_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_partnerapps_steamclient_proto_rawDesc), len(file_steammessages_partnerapps_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_partnerapps_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_partnerapps_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_partnerapps_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_partnerapps_steamclient_proto = out.File
	file_steammessages_partnerapps_steamclient_proto_goTypes = nil
	file_steammessages_partnerapps_steamclient_proto_depIdxs = nil
}
