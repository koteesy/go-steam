// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: steammessages_clientserver_friends.proto

package protobuf

import (
	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientFriendMsg struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Steamid                *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	ChatEntryType          *int32                 `protobuf:"varint,2,opt,name=chat_entry_type,json=chatEntryType" json:"chat_entry_type,omitempty"`
	Message                []byte                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Rtime32ServerTimestamp *uint32                `protobuf:"fixed32,4,opt,name=rtime32_server_timestamp,json=rtime32ServerTimestamp" json:"rtime32_server_timestamp,omitempty"`
	EchoToSender           *bool                  `protobuf:"varint,5,opt,name=echo_to_sender,json=echoToSender" json:"echo_to_sender,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CMsgClientFriendMsg) Reset() {
	*x = CMsgClientFriendMsg{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendMsg) ProtoMessage() {}

func (x *CMsgClientFriendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendMsg.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendMsg) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientFriendMsg) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientFriendMsg) GetChatEntryType() int32 {
	if x != nil && x.ChatEntryType != nil {
		return *x.ChatEntryType
	}
	return 0
}

func (x *CMsgClientFriendMsg) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CMsgClientFriendMsg) GetRtime32ServerTimestamp() uint32 {
	if x != nil && x.Rtime32ServerTimestamp != nil {
		return *x.Rtime32ServerTimestamp
	}
	return 0
}

func (x *CMsgClientFriendMsg) GetEchoToSender() bool {
	if x != nil && x.EchoToSender != nil {
		return *x.EchoToSender
	}
	return false
}

type CMsgClientFriendMsgIncoming struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SteamidFrom            *uint64                `protobuf:"fixed64,1,opt,name=steamid_from,json=steamidFrom" json:"steamid_from,omitempty"`
	ChatEntryType          *int32                 `protobuf:"varint,2,opt,name=chat_entry_type,json=chatEntryType" json:"chat_entry_type,omitempty"`
	FromLimitedAccount     *bool                  `protobuf:"varint,3,opt,name=from_limited_account,json=fromLimitedAccount" json:"from_limited_account,omitempty"`
	Message                []byte                 `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Rtime32ServerTimestamp *uint32                `protobuf:"fixed32,5,opt,name=rtime32_server_timestamp,json=rtime32ServerTimestamp" json:"rtime32_server_timestamp,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CMsgClientFriendMsgIncoming) Reset() {
	*x = CMsgClientFriendMsgIncoming{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendMsgIncoming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendMsgIncoming) ProtoMessage() {}

func (x *CMsgClientFriendMsgIncoming) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendMsgIncoming.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendMsgIncoming) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientFriendMsgIncoming) GetSteamidFrom() uint64 {
	if x != nil && x.SteamidFrom != nil {
		return *x.SteamidFrom
	}
	return 0
}

func (x *CMsgClientFriendMsgIncoming) GetChatEntryType() int32 {
	if x != nil && x.ChatEntryType != nil {
		return *x.ChatEntryType
	}
	return 0
}

func (x *CMsgClientFriendMsgIncoming) GetFromLimitedAccount() bool {
	if x != nil && x.FromLimitedAccount != nil {
		return *x.FromLimitedAccount
	}
	return false
}

func (x *CMsgClientFriendMsgIncoming) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CMsgClientFriendMsgIncoming) GetRtime32ServerTimestamp() uint32 {
	if x != nil && x.Rtime32ServerTimestamp != nil {
		return *x.Rtime32ServerTimestamp
	}
	return 0
}

type CMsgClientAddFriend struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	SteamidToAdd            *uint64                `protobuf:"fixed64,1,opt,name=steamid_to_add,json=steamidToAdd" json:"steamid_to_add,omitempty"`
	AccountnameOrEmailToAdd *string                `protobuf:"bytes,2,opt,name=accountname_or_email_to_add,json=accountnameOrEmailToAdd" json:"accountname_or_email_to_add,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CMsgClientAddFriend) Reset() {
	*x = CMsgClientAddFriend{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientAddFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAddFriend) ProtoMessage() {}

func (x *CMsgClientAddFriend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAddFriend.ProtoReflect.Descriptor instead.
func (*CMsgClientAddFriend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientAddFriend) GetSteamidToAdd() uint64 {
	if x != nil && x.SteamidToAdd != nil {
		return *x.SteamidToAdd
	}
	return 0
}

func (x *CMsgClientAddFriend) GetAccountnameOrEmailToAdd() string {
	if x != nil && x.AccountnameOrEmailToAdd != nil {
		return *x.AccountnameOrEmailToAdd
	}
	return ""
}

type CMsgClientAddFriendResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Eresult          *int32                 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	SteamIdAdded     *uint64                `protobuf:"fixed64,2,opt,name=steam_id_added,json=steamIdAdded" json:"steam_id_added,omitempty"`
	PersonaNameAdded *string                `protobuf:"bytes,3,opt,name=persona_name_added,json=personaNameAdded" json:"persona_name_added,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CMsgClientAddFriendResponse fields.
const (
	Default_CMsgClientAddFriendResponse_Eresult = int32(2)
)

func (x *CMsgClientAddFriendResponse) Reset() {
	*x = CMsgClientAddFriendResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientAddFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAddFriendResponse) ProtoMessage() {}

func (x *CMsgClientAddFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAddFriendResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientAddFriendResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientAddFriendResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientAddFriendResponse_Eresult
}

func (x *CMsgClientAddFriendResponse) GetSteamIdAdded() uint64 {
	if x != nil && x.SteamIdAdded != nil {
		return *x.SteamIdAdded
	}
	return 0
}

func (x *CMsgClientAddFriendResponse) GetPersonaNameAdded() string {
	if x != nil && x.PersonaNameAdded != nil {
		return *x.PersonaNameAdded
	}
	return ""
}

type CMsgClientRemoveFriend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friendid      *uint64                `protobuf:"fixed64,1,opt,name=friendid" json:"friendid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientRemoveFriend) Reset() {
	*x = CMsgClientRemoveFriend{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientRemoveFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRemoveFriend) ProtoMessage() {}

func (x *CMsgClientRemoveFriend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRemoveFriend.ProtoReflect.Descriptor instead.
func (*CMsgClientRemoveFriend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientRemoveFriend) GetFriendid() uint64 {
	if x != nil && x.Friendid != nil {
		return *x.Friendid
	}
	return 0
}

type CMsgClientHideFriend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friendid      *uint64                `protobuf:"fixed64,1,opt,name=friendid" json:"friendid,omitempty"`
	Hide          *bool                  `protobuf:"varint,2,opt,name=hide" json:"hide,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientHideFriend) Reset() {
	*x = CMsgClientHideFriend{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientHideFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientHideFriend) ProtoMessage() {}

func (x *CMsgClientHideFriend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientHideFriend.ProtoReflect.Descriptor instead.
func (*CMsgClientHideFriend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientHideFriend) GetFriendid() uint64 {
	if x != nil && x.Friendid != nil {
		return *x.Friendid
	}
	return 0
}

func (x *CMsgClientHideFriend) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

type CMsgClientFriendsList struct {
	state             protoimpl.MessageState          `protogen:"open.v1"`
	Bincremental      *bool                           `protobuf:"varint,1,opt,name=bincremental" json:"bincremental,omitempty"`
	Friends           []*CMsgClientFriendsList_Friend `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	MaxFriendCount    *uint32                         `protobuf:"varint,3,opt,name=max_friend_count,json=maxFriendCount" json:"max_friend_count,omitempty"`
	ActiveFriendCount *uint32                         `protobuf:"varint,4,opt,name=active_friend_count,json=activeFriendCount" json:"active_friend_count,omitempty"`
	FriendsLimitHit   *bool                           `protobuf:"varint,5,opt,name=friends_limit_hit,json=friendsLimitHit" json:"friends_limit_hit,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgClientFriendsList) Reset() {
	*x = CMsgClientFriendsList{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsList) ProtoMessage() {}

func (x *CMsgClientFriendsList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsList.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientFriendsList) GetBincremental() bool {
	if x != nil && x.Bincremental != nil {
		return *x.Bincremental
	}
	return false
}

func (x *CMsgClientFriendsList) GetFriends() []*CMsgClientFriendsList_Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *CMsgClientFriendsList) GetMaxFriendCount() uint32 {
	if x != nil && x.MaxFriendCount != nil {
		return *x.MaxFriendCount
	}
	return 0
}

func (x *CMsgClientFriendsList) GetActiveFriendCount() uint32 {
	if x != nil && x.ActiveFriendCount != nil {
		return *x.ActiveFriendCount
	}
	return 0
}

func (x *CMsgClientFriendsList) GetFriendsLimitHit() bool {
	if x != nil && x.FriendsLimitHit != nil {
		return *x.FriendsLimitHit
	}
	return false
}

type CMsgClientFriendsGroupsList struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Bremoval      *bool                                                 `protobuf:"varint,1,opt,name=bremoval" json:"bremoval,omitempty"`
	Bincremental  *bool                                                 `protobuf:"varint,2,opt,name=bincremental" json:"bincremental,omitempty"`
	FriendGroups  []*CMsgClientFriendsGroupsList_FriendGroup            `protobuf:"bytes,3,rep,name=friendGroups" json:"friendGroups,omitempty"`
	Memberships   []*CMsgClientFriendsGroupsList_FriendGroupsMembership `protobuf:"bytes,4,rep,name=memberships" json:"memberships,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientFriendsGroupsList) Reset() {
	*x = CMsgClientFriendsGroupsList{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendsGroupsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsGroupsList) ProtoMessage() {}

func (x *CMsgClientFriendsGroupsList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsGroupsList.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsGroupsList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientFriendsGroupsList) GetBremoval() bool {
	if x != nil && x.Bremoval != nil {
		return *x.Bremoval
	}
	return false
}

func (x *CMsgClientFriendsGroupsList) GetBincremental() bool {
	if x != nil && x.Bincremental != nil {
		return *x.Bincremental
	}
	return false
}

func (x *CMsgClientFriendsGroupsList) GetFriendGroups() []*CMsgClientFriendsGroupsList_FriendGroup {
	if x != nil {
		return x.FriendGroups
	}
	return nil
}

func (x *CMsgClientFriendsGroupsList) GetMemberships() []*CMsgClientFriendsGroupsList_FriendGroupsMembership {
	if x != nil {
		return x.Memberships
	}
	return nil
}

type CMsgClientPlayerNicknameList struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Removal       *bool                                          `protobuf:"varint,1,opt,name=removal" json:"removal,omitempty"`
	Incremental   *bool                                          `protobuf:"varint,2,opt,name=incremental" json:"incremental,omitempty"`
	Nicknames     []*CMsgClientPlayerNicknameList_PlayerNickname `protobuf:"bytes,3,rep,name=nicknames" json:"nicknames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientPlayerNicknameList) Reset() {
	*x = CMsgClientPlayerNicknameList{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPlayerNicknameList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPlayerNicknameList) ProtoMessage() {}

func (x *CMsgClientPlayerNicknameList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPlayerNicknameList.ProtoReflect.Descriptor instead.
func (*CMsgClientPlayerNicknameList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientPlayerNicknameList) GetRemoval() bool {
	if x != nil && x.Removal != nil {
		return *x.Removal
	}
	return false
}

func (x *CMsgClientPlayerNicknameList) GetIncremental() bool {
	if x != nil && x.Incremental != nil {
		return *x.Incremental
	}
	return false
}

func (x *CMsgClientPlayerNicknameList) GetNicknames() []*CMsgClientPlayerNicknameList_PlayerNickname {
	if x != nil {
		return x.Nicknames
	}
	return nil
}

type CMsgClientSetPlayerNickname struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Nickname      *string                `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientSetPlayerNickname) Reset() {
	*x = CMsgClientSetPlayerNickname{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientSetPlayerNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSetPlayerNickname) ProtoMessage() {}

func (x *CMsgClientSetPlayerNickname) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSetPlayerNickname.ProtoReflect.Descriptor instead.
func (*CMsgClientSetPlayerNickname) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientSetPlayerNickname) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientSetPlayerNickname) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

type CMsgClientSetPlayerNicknameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientSetPlayerNicknameResponse) Reset() {
	*x = CMsgClientSetPlayerNicknameResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientSetPlayerNicknameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSetPlayerNicknameResponse) ProtoMessage() {}

func (x *CMsgClientSetPlayerNicknameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSetPlayerNicknameResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientSetPlayerNicknameResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgClientSetPlayerNicknameResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientRequestFriendData struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PersonaStateRequested *uint32                `protobuf:"varint,1,opt,name=persona_state_requested,json=personaStateRequested" json:"persona_state_requested,omitempty"`
	Friends               []uint64               `protobuf:"fixed64,2,rep,name=friends" json:"friends,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgClientRequestFriendData) Reset() {
	*x = CMsgClientRequestFriendData{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientRequestFriendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestFriendData) ProtoMessage() {}

func (x *CMsgClientRequestFriendData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestFriendData.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestFriendData) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientRequestFriendData) GetPersonaStateRequested() uint32 {
	if x != nil && x.PersonaStateRequested != nil {
		return *x.PersonaStateRequested
	}
	return 0
}

func (x *CMsgClientRequestFriendData) GetFriends() []uint64 {
	if x != nil {
		return x.Friends
	}
	return nil
}

type CMsgClientChangeStatus struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PersonaState        *uint32                `protobuf:"varint,1,opt,name=persona_state,json=personaState" json:"persona_state,omitempty"`
	PlayerName          *string                `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	IsAutoGeneratedName *bool                  `protobuf:"varint,3,opt,name=is_auto_generated_name,json=isAutoGeneratedName" json:"is_auto_generated_name,omitempty"`
	HighPriority        *bool                  `protobuf:"varint,4,opt,name=high_priority,json=highPriority" json:"high_priority,omitempty"`
	PersonaSetByUser    *bool                  `protobuf:"varint,5,opt,name=persona_set_by_user,json=personaSetByUser" json:"persona_set_by_user,omitempty"`
	PersonaStateFlags   *uint32                `protobuf:"varint,6,opt,name=persona_state_flags,json=personaStateFlags,def=0" json:"persona_state_flags,omitempty"`
	NeedPersonaResponse *bool                  `protobuf:"varint,7,opt,name=need_persona_response,json=needPersonaResponse" json:"need_persona_response,omitempty"`
	IsClientIdle        *bool                  `protobuf:"varint,8,opt,name=is_client_idle,json=isClientIdle" json:"is_client_idle,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CMsgClientChangeStatus fields.
const (
	Default_CMsgClientChangeStatus_PersonaStateFlags = uint32(0)
)

func (x *CMsgClientChangeStatus) Reset() {
	*x = CMsgClientChangeStatus{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientChangeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientChangeStatus) ProtoMessage() {}

func (x *CMsgClientChangeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientChangeStatus.ProtoReflect.Descriptor instead.
func (*CMsgClientChangeStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientChangeStatus) GetPersonaState() uint32 {
	if x != nil && x.PersonaState != nil {
		return *x.PersonaState
	}
	return 0
}

func (x *CMsgClientChangeStatus) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

func (x *CMsgClientChangeStatus) GetIsAutoGeneratedName() bool {
	if x != nil && x.IsAutoGeneratedName != nil {
		return *x.IsAutoGeneratedName
	}
	return false
}

func (x *CMsgClientChangeStatus) GetHighPriority() bool {
	if x != nil && x.HighPriority != nil {
		return *x.HighPriority
	}
	return false
}

func (x *CMsgClientChangeStatus) GetPersonaSetByUser() bool {
	if x != nil && x.PersonaSetByUser != nil {
		return *x.PersonaSetByUser
	}
	return false
}

func (x *CMsgClientChangeStatus) GetPersonaStateFlags() uint32 {
	if x != nil && x.PersonaStateFlags != nil {
		return *x.PersonaStateFlags
	}
	return Default_CMsgClientChangeStatus_PersonaStateFlags
}

func (x *CMsgClientChangeStatus) GetNeedPersonaResponse() bool {
	if x != nil && x.NeedPersonaResponse != nil {
		return *x.NeedPersonaResponse
	}
	return false
}

func (x *CMsgClientChangeStatus) GetIsClientIdle() bool {
	if x != nil && x.IsClientIdle != nil {
		return *x.IsClientIdle
	}
	return false
}

type CMsgPersonaChangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	PlayerName    *string                `protobuf:"bytes,2,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPersonaChangeResponse) Reset() {
	*x = CMsgPersonaChangeResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPersonaChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPersonaChangeResponse) ProtoMessage() {}

func (x *CMsgPersonaChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPersonaChangeResponse.ProtoReflect.Descriptor instead.
func (*CMsgPersonaChangeResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgPersonaChangeResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgPersonaChangeResponse) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

type CMsgClientPersonaState struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	StatusFlags   *uint32                          `protobuf:"varint,1,opt,name=status_flags,json=statusFlags" json:"status_flags,omitempty"`
	Friends       []*CMsgClientPersonaState_Friend `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientPersonaState) Reset() {
	*x = CMsgClientPersonaState{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPersonaState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPersonaState) ProtoMessage() {}

func (x *CMsgClientPersonaState) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPersonaState.ProtoReflect.Descriptor instead.
func (*CMsgClientPersonaState) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientPersonaState) GetStatusFlags() uint32 {
	if x != nil && x.StatusFlags != nil {
		return *x.StatusFlags
	}
	return 0
}

func (x *CMsgClientPersonaState) GetFriends() []*CMsgClientPersonaState_Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type CMsgClientFriendProfileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SteamidFriend *uint64                `protobuf:"fixed64,1,opt,name=steamid_friend,json=steamidFriend" json:"steamid_friend,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientFriendProfileInfo) Reset() {
	*x = CMsgClientFriendProfileInfo{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendProfileInfo) ProtoMessage() {}

func (x *CMsgClientFriendProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendProfileInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendProfileInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientFriendProfileInfo) GetSteamidFriend() uint64 {
	if x != nil && x.SteamidFriend != nil {
		return *x.SteamidFriend
	}
	return 0
}

type CMsgClientFriendProfileInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *int32                 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	SteamidFriend *uint64                `protobuf:"fixed64,2,opt,name=steamid_friend,json=steamidFriend" json:"steamid_friend,omitempty"`
	TimeCreated   *uint32                `protobuf:"varint,3,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	RealName      *string                `protobuf:"bytes,4,opt,name=real_name,json=realName" json:"real_name,omitempty"`
	CityName      *string                `protobuf:"bytes,5,opt,name=city_name,json=cityName" json:"city_name,omitempty"`
	StateName     *string                `protobuf:"bytes,6,opt,name=state_name,json=stateName" json:"state_name,omitempty"`
	CountryName   *string                `protobuf:"bytes,7,opt,name=country_name,json=countryName" json:"country_name,omitempty"`
	Headline      *string                `protobuf:"bytes,8,opt,name=headline" json:"headline,omitempty"`
	Summary       *string                `protobuf:"bytes,9,opt,name=summary" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClientFriendProfileInfoResponse fields.
const (
	Default_CMsgClientFriendProfileInfoResponse_Eresult = int32(2)
)

func (x *CMsgClientFriendProfileInfoResponse) Reset() {
	*x = CMsgClientFriendProfileInfoResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendProfileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendProfileInfoResponse) ProtoMessage() {}

func (x *CMsgClientFriendProfileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendProfileInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendProfileInfoResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgClientFriendProfileInfoResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientFriendProfileInfoResponse_Eresult
}

func (x *CMsgClientFriendProfileInfoResponse) GetSteamidFriend() uint64 {
	if x != nil && x.SteamidFriend != nil {
		return *x.SteamidFriend
	}
	return 0
}

func (x *CMsgClientFriendProfileInfoResponse) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CMsgClientFriendProfileInfoResponse) GetRealName() string {
	if x != nil && x.RealName != nil {
		return *x.RealName
	}
	return ""
}

func (x *CMsgClientFriendProfileInfoResponse) GetCityName() string {
	if x != nil && x.CityName != nil {
		return *x.CityName
	}
	return ""
}

func (x *CMsgClientFriendProfileInfoResponse) GetStateName() string {
	if x != nil && x.StateName != nil {
		return *x.StateName
	}
	return ""
}

func (x *CMsgClientFriendProfileInfoResponse) GetCountryName() string {
	if x != nil && x.CountryName != nil {
		return *x.CountryName
	}
	return ""
}

func (x *CMsgClientFriendProfileInfoResponse) GetHeadline() string {
	if x != nil && x.Headline != nil {
		return *x.Headline
	}
	return ""
}

func (x *CMsgClientFriendProfileInfoResponse) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

type CMsgClientCreateFriendsGroup struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Steamid        *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Groupname      *string                `protobuf:"bytes,2,opt,name=groupname" json:"groupname,omitempty"`
	SteamidFriends []uint64               `protobuf:"fixed64,3,rep,name=steamid_friends,json=steamidFriends" json:"steamid_friends,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgClientCreateFriendsGroup) Reset() {
	*x = CMsgClientCreateFriendsGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientCreateFriendsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCreateFriendsGroup) ProtoMessage() {}

func (x *CMsgClientCreateFriendsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCreateFriendsGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientCreateFriendsGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientCreateFriendsGroup) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientCreateFriendsGroup) GetGroupname() string {
	if x != nil && x.Groupname != nil {
		return *x.Groupname
	}
	return ""
}

func (x *CMsgClientCreateFriendsGroup) GetSteamidFriends() []uint64 {
	if x != nil {
		return x.SteamidFriends
	}
	return nil
}

type CMsgClientCreateFriendsGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	Groupid       *int32                 `protobuf:"varint,2,opt,name=groupid" json:"groupid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientCreateFriendsGroupResponse) Reset() {
	*x = CMsgClientCreateFriendsGroupResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientCreateFriendsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCreateFriendsGroupResponse) ProtoMessage() {}

func (x *CMsgClientCreateFriendsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCreateFriendsGroupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientCreateFriendsGroupResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgClientCreateFriendsGroupResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgClientCreateFriendsGroupResponse) GetGroupid() int32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

type CMsgClientDeleteFriendsGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Groupid       *int32                 `protobuf:"varint,2,opt,name=groupid" json:"groupid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientDeleteFriendsGroup) Reset() {
	*x = CMsgClientDeleteFriendsGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientDeleteFriendsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDeleteFriendsGroup) ProtoMessage() {}

func (x *CMsgClientDeleteFriendsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDeleteFriendsGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientDeleteFriendsGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientDeleteFriendsGroup) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientDeleteFriendsGroup) GetGroupid() int32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

type CMsgClientDeleteFriendsGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientDeleteFriendsGroupResponse) Reset() {
	*x = CMsgClientDeleteFriendsGroupResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientDeleteFriendsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDeleteFriendsGroupResponse) ProtoMessage() {}

func (x *CMsgClientDeleteFriendsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDeleteFriendsGroupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientDeleteFriendsGroupResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientDeleteFriendsGroupResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientManageFriendsGroup struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Groupid               *int32                 `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	Groupname             *string                `protobuf:"bytes,2,opt,name=groupname" json:"groupname,omitempty"`
	SteamidFriendsAdded   []uint64               `protobuf:"fixed64,3,rep,name=steamid_friends_added,json=steamidFriendsAdded" json:"steamid_friends_added,omitempty"`
	SteamidFriendsRemoved []uint64               `protobuf:"fixed64,4,rep,name=steamid_friends_removed,json=steamidFriendsRemoved" json:"steamid_friends_removed,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgClientManageFriendsGroup) Reset() {
	*x = CMsgClientManageFriendsGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientManageFriendsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientManageFriendsGroup) ProtoMessage() {}

func (x *CMsgClientManageFriendsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientManageFriendsGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientManageFriendsGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientManageFriendsGroup) GetGroupid() int32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *CMsgClientManageFriendsGroup) GetGroupname() string {
	if x != nil && x.Groupname != nil {
		return *x.Groupname
	}
	return ""
}

func (x *CMsgClientManageFriendsGroup) GetSteamidFriendsAdded() []uint64 {
	if x != nil {
		return x.SteamidFriendsAdded
	}
	return nil
}

func (x *CMsgClientManageFriendsGroup) GetSteamidFriendsRemoved() []uint64 {
	if x != nil {
		return x.SteamidFriendsRemoved
	}
	return nil
}

type CMsgClientManageFriendsGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientManageFriendsGroupResponse) Reset() {
	*x = CMsgClientManageFriendsGroupResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientManageFriendsGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientManageFriendsGroupResponse) ProtoMessage() {}

func (x *CMsgClientManageFriendsGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientManageFriendsGroupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientManageFriendsGroupResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgClientManageFriendsGroupResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientAddFriendToGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groupid       *int32                 `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	Steamiduser   *uint64                `protobuf:"fixed64,2,opt,name=steamiduser" json:"steamiduser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientAddFriendToGroup) Reset() {
	*x = CMsgClientAddFriendToGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientAddFriendToGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAddFriendToGroup) ProtoMessage() {}

func (x *CMsgClientAddFriendToGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAddFriendToGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientAddFriendToGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgClientAddFriendToGroup) GetGroupid() int32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *CMsgClientAddFriendToGroup) GetSteamiduser() uint64 {
	if x != nil && x.Steamiduser != nil {
		return *x.Steamiduser
	}
	return 0
}

type CMsgClientAddFriendToGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientAddFriendToGroupResponse) Reset() {
	*x = CMsgClientAddFriendToGroupResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientAddFriendToGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAddFriendToGroupResponse) ProtoMessage() {}

func (x *CMsgClientAddFriendToGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAddFriendToGroupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientAddFriendToGroupResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgClientAddFriendToGroupResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientRemoveFriendFromGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groupid       *int32                 `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	Steamiduser   *uint64                `protobuf:"fixed64,2,opt,name=steamiduser" json:"steamiduser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientRemoveFriendFromGroup) Reset() {
	*x = CMsgClientRemoveFriendFromGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientRemoveFriendFromGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRemoveFriendFromGroup) ProtoMessage() {}

func (x *CMsgClientRemoveFriendFromGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRemoveFriendFromGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientRemoveFriendFromGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgClientRemoveFriendFromGroup) GetGroupid() int32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *CMsgClientRemoveFriendFromGroup) GetSteamiduser() uint64 {
	if x != nil && x.Steamiduser != nil {
		return *x.Steamiduser
	}
	return 0
}

type CMsgClientRemoveFriendFromGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *uint32                `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientRemoveFriendFromGroupResponse) Reset() {
	*x = CMsgClientRemoveFriendFromGroupResponse{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientRemoveFriendFromGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRemoveFriendFromGroupResponse) ProtoMessage() {}

func (x *CMsgClientRemoveFriendFromGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRemoveFriendFromGroupResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientRemoveFriendFromGroupResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgClientRemoveFriendFromGroupResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientGetEmoticonList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientGetEmoticonList) Reset() {
	*x = CMsgClientGetEmoticonList{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetEmoticonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetEmoticonList) ProtoMessage() {}

func (x *CMsgClientGetEmoticonList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetEmoticonList.ProtoReflect.Descriptor instead.
func (*CMsgClientGetEmoticonList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{27}
}

type CMsgClientEmoticonList struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Emoticons     []*CMsgClientEmoticonList_Emoticon `protobuf:"bytes,1,rep,name=emoticons" json:"emoticons,omitempty"`
	Stickers      []*CMsgClientEmoticonList_Sticker  `protobuf:"bytes,2,rep,name=stickers" json:"stickers,omitempty"`
	Effects       []*CMsgClientEmoticonList_Effect   `protobuf:"bytes,3,rep,name=effects" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEmoticonList) Reset() {
	*x = CMsgClientEmoticonList{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEmoticonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEmoticonList) ProtoMessage() {}

func (x *CMsgClientEmoticonList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEmoticonList.ProtoReflect.Descriptor instead.
func (*CMsgClientEmoticonList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClientEmoticonList) GetEmoticons() []*CMsgClientEmoticonList_Emoticon {
	if x != nil {
		return x.Emoticons
	}
	return nil
}

func (x *CMsgClientEmoticonList) GetStickers() []*CMsgClientEmoticonList_Sticker {
	if x != nil {
		return x.Stickers
	}
	return nil
}

func (x *CMsgClientEmoticonList) GetEffects() []*CMsgClientEmoticonList_Effect {
	if x != nil {
		return x.Effects
	}
	return nil
}

type CMsgClientFriendsList_Friend struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Ulfriendid          *uint64                `protobuf:"fixed64,1,opt,name=ulfriendid" json:"ulfriendid,omitempty"`
	Efriendrelationship *uint32                `protobuf:"varint,2,opt,name=efriendrelationship" json:"efriendrelationship,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgClientFriendsList_Friend) Reset() {
	*x = CMsgClientFriendsList_Friend{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendsList_Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsList_Friend) ProtoMessage() {}

func (x *CMsgClientFriendsList_Friend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsList_Friend.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsList_Friend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CMsgClientFriendsList_Friend) GetUlfriendid() uint64 {
	if x != nil && x.Ulfriendid != nil {
		return *x.Ulfriendid
	}
	return 0
}

func (x *CMsgClientFriendsList_Friend) GetEfriendrelationship() uint32 {
	if x != nil && x.Efriendrelationship != nil {
		return *x.Efriendrelationship
	}
	return 0
}

type CMsgClientFriendsGroupsList_FriendGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NGroupID      *int32                 `protobuf:"varint,1,opt,name=nGroupID" json:"nGroupID,omitempty"`
	StrGroupName  *string                `protobuf:"bytes,2,opt,name=strGroupName" json:"strGroupName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientFriendsGroupsList_FriendGroup) Reset() {
	*x = CMsgClientFriendsGroupsList_FriendGroup{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendsGroupsList_FriendGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsGroupsList_FriendGroup) ProtoMessage() {}

func (x *CMsgClientFriendsGroupsList_FriendGroup) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsGroupsList_FriendGroup.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsGroupsList_FriendGroup) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CMsgClientFriendsGroupsList_FriendGroup) GetNGroupID() int32 {
	if x != nil && x.NGroupID != nil {
		return *x.NGroupID
	}
	return 0
}

func (x *CMsgClientFriendsGroupsList_FriendGroup) GetStrGroupName() string {
	if x != nil && x.StrGroupName != nil {
		return *x.StrGroupName
	}
	return ""
}

type CMsgClientFriendsGroupsList_FriendGroupsMembership struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UlSteamID     *uint64                `protobuf:"fixed64,1,opt,name=ulSteamID" json:"ulSteamID,omitempty"`
	NGroupID      *int32                 `protobuf:"varint,2,opt,name=nGroupID" json:"nGroupID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientFriendsGroupsList_FriendGroupsMembership) Reset() {
	*x = CMsgClientFriendsGroupsList_FriendGroupsMembership{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientFriendsGroupsList_FriendGroupsMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsGroupsList_FriendGroupsMembership) ProtoMessage() {}

func (x *CMsgClientFriendsGroupsList_FriendGroupsMembership) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsGroupsList_FriendGroupsMembership.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsGroupsList_FriendGroupsMembership) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{7, 1}
}

func (x *CMsgClientFriendsGroupsList_FriendGroupsMembership) GetUlSteamID() uint64 {
	if x != nil && x.UlSteamID != nil {
		return *x.UlSteamID
	}
	return 0
}

func (x *CMsgClientFriendsGroupsList_FriendGroupsMembership) GetNGroupID() int32 {
	if x != nil && x.NGroupID != nil {
		return *x.NGroupID
	}
	return 0
}

type CMsgClientPlayerNicknameList_PlayerNickname struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Nickname      *string                `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientPlayerNicknameList_PlayerNickname) Reset() {
	*x = CMsgClientPlayerNicknameList_PlayerNickname{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPlayerNicknameList_PlayerNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPlayerNicknameList_PlayerNickname) ProtoMessage() {}

func (x *CMsgClientPlayerNicknameList_PlayerNickname) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPlayerNicknameList_PlayerNickname.ProtoReflect.Descriptor instead.
func (*CMsgClientPlayerNicknameList_PlayerNickname) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CMsgClientPlayerNicknameList_PlayerNickname) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientPlayerNicknameList_PlayerNickname) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

type CMsgClientPersonaState_Friend struct {
	state                      protoimpl.MessageState                  `protogen:"open.v1"`
	Friendid                   *uint64                                 `protobuf:"fixed64,1,opt,name=friendid" json:"friendid,omitempty"`
	PersonaState               *uint32                                 `protobuf:"varint,2,opt,name=persona_state,json=personaState" json:"persona_state,omitempty"`
	GamePlayedAppId            *uint32                                 `protobuf:"varint,3,opt,name=game_played_app_id,json=gamePlayedAppId" json:"game_played_app_id,omitempty"`
	GameServerIp               *uint32                                 `protobuf:"varint,4,opt,name=game_server_ip,json=gameServerIp" json:"game_server_ip,omitempty"`
	GameServerPort             *uint32                                 `protobuf:"varint,5,opt,name=game_server_port,json=gameServerPort" json:"game_server_port,omitempty"`
	PersonaStateFlags          *uint32                                 `protobuf:"varint,6,opt,name=persona_state_flags,json=personaStateFlags" json:"persona_state_flags,omitempty"`
	OnlineSessionInstances     *uint32                                 `protobuf:"varint,7,opt,name=online_session_instances,json=onlineSessionInstances" json:"online_session_instances,omitempty"`
	PersonaSetByUser           *bool                                   `protobuf:"varint,10,opt,name=persona_set_by_user,json=personaSetByUser" json:"persona_set_by_user,omitempty"`
	PlayerName                 *string                                 `protobuf:"bytes,15,opt,name=player_name,json=playerName" json:"player_name,omitempty"`
	QueryPort                  *uint32                                 `protobuf:"varint,20,opt,name=query_port,json=queryPort" json:"query_port,omitempty"`
	SteamidSource              *uint64                                 `protobuf:"fixed64,25,opt,name=steamid_source,json=steamidSource" json:"steamid_source,omitempty"`
	AvatarHash                 []byte                                  `protobuf:"bytes,31,opt,name=avatar_hash,json=avatarHash" json:"avatar_hash,omitempty"`
	LastLogoff                 *uint32                                 `protobuf:"varint,45,opt,name=last_logoff,json=lastLogoff" json:"last_logoff,omitempty"`
	LastLogon                  *uint32                                 `protobuf:"varint,46,opt,name=last_logon,json=lastLogon" json:"last_logon,omitempty"`
	LastSeenOnline             *uint32                                 `protobuf:"varint,47,opt,name=last_seen_online,json=lastSeenOnline" json:"last_seen_online,omitempty"`
	ClanRank                   *uint32                                 `protobuf:"varint,50,opt,name=clan_rank,json=clanRank" json:"clan_rank,omitempty"`
	GameName                   *string                                 `protobuf:"bytes,55,opt,name=game_name,json=gameName" json:"game_name,omitempty"`
	Gameid                     *uint64                                 `protobuf:"fixed64,56,opt,name=gameid" json:"gameid,omitempty"`
	GameDataBlob               []byte                                  `protobuf:"bytes,60,opt,name=game_data_blob,json=gameDataBlob" json:"game_data_blob,omitempty"`
	ClanData                   *CMsgClientPersonaState_Friend_ClanData `protobuf:"bytes,64,opt,name=clan_data,json=clanData" json:"clan_data,omitempty"`
	ClanTag                    *string                                 `protobuf:"bytes,65,opt,name=clan_tag,json=clanTag" json:"clan_tag,omitempty"`
	RichPresence               []*CMsgClientPersonaState_Friend_KV     `protobuf:"bytes,71,rep,name=rich_presence,json=richPresence" json:"rich_presence,omitempty"`
	BroadcastId                *uint64                                 `protobuf:"fixed64,72,opt,name=broadcast_id,json=broadcastId" json:"broadcast_id,omitempty"`
	GameLobbyId                *uint64                                 `protobuf:"fixed64,73,opt,name=game_lobby_id,json=gameLobbyId" json:"game_lobby_id,omitempty"`
	WatchingBroadcastAccountid *uint32                                 `protobuf:"varint,74,opt,name=watching_broadcast_accountid,json=watchingBroadcastAccountid" json:"watching_broadcast_accountid,omitempty"`
	WatchingBroadcastAppid     *uint32                                 `protobuf:"varint,75,opt,name=watching_broadcast_appid,json=watchingBroadcastAppid" json:"watching_broadcast_appid,omitempty"`
	WatchingBroadcastViewers   *uint32                                 `protobuf:"varint,76,opt,name=watching_broadcast_viewers,json=watchingBroadcastViewers" json:"watching_broadcast_viewers,omitempty"`
	WatchingBroadcastTitle     *string                                 `protobuf:"bytes,77,opt,name=watching_broadcast_title,json=watchingBroadcastTitle" json:"watching_broadcast_title,omitempty"`
	IsCommunityBanned          *bool                                   `protobuf:"varint,78,opt,name=is_community_banned,json=isCommunityBanned" json:"is_community_banned,omitempty"`
	PlayerNamePendingReview    *bool                                   `protobuf:"varint,79,opt,name=player_name_pending_review,json=playerNamePendingReview" json:"player_name_pending_review,omitempty"`
	AvatarPendingReview        *bool                                   `protobuf:"varint,80,opt,name=avatar_pending_review,json=avatarPendingReview" json:"avatar_pending_review,omitempty"`
	OnSteamDeck                *bool                                   `protobuf:"varint,81,opt,name=on_steam_deck,json=onSteamDeck" json:"on_steam_deck,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CMsgClientPersonaState_Friend) Reset() {
	*x = CMsgClientPersonaState_Friend{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPersonaState_Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPersonaState_Friend) ProtoMessage() {}

func (x *CMsgClientPersonaState_Friend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPersonaState_Friend.ProtoReflect.Descriptor instead.
func (*CMsgClientPersonaState_Friend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CMsgClientPersonaState_Friend) GetFriendid() uint64 {
	if x != nil && x.Friendid != nil {
		return *x.Friendid
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetPersonaState() uint32 {
	if x != nil && x.PersonaState != nil {
		return *x.PersonaState
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGamePlayedAppId() uint32 {
	if x != nil && x.GamePlayedAppId != nil {
		return *x.GamePlayedAppId
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGameServerIp() uint32 {
	if x != nil && x.GameServerIp != nil {
		return *x.GameServerIp
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGameServerPort() uint32 {
	if x != nil && x.GameServerPort != nil {
		return *x.GameServerPort
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetPersonaStateFlags() uint32 {
	if x != nil && x.PersonaStateFlags != nil {
		return *x.PersonaStateFlags
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetOnlineSessionInstances() uint32 {
	if x != nil && x.OnlineSessionInstances != nil {
		return *x.OnlineSessionInstances
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetPersonaSetByUser() bool {
	if x != nil && x.PersonaSetByUser != nil {
		return *x.PersonaSetByUser
	}
	return false
}

func (x *CMsgClientPersonaState_Friend) GetPlayerName() string {
	if x != nil && x.PlayerName != nil {
		return *x.PlayerName
	}
	return ""
}

func (x *CMsgClientPersonaState_Friend) GetQueryPort() uint32 {
	if x != nil && x.QueryPort != nil {
		return *x.QueryPort
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetSteamidSource() uint64 {
	if x != nil && x.SteamidSource != nil {
		return *x.SteamidSource
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetAvatarHash() []byte {
	if x != nil {
		return x.AvatarHash
	}
	return nil
}

func (x *CMsgClientPersonaState_Friend) GetLastLogoff() uint32 {
	if x != nil && x.LastLogoff != nil {
		return *x.LastLogoff
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetLastLogon() uint32 {
	if x != nil && x.LastLogon != nil {
		return *x.LastLogon
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetLastSeenOnline() uint32 {
	if x != nil && x.LastSeenOnline != nil {
		return *x.LastSeenOnline
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetClanRank() uint32 {
	if x != nil && x.ClanRank != nil {
		return *x.ClanRank
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGameName() string {
	if x != nil && x.GameName != nil {
		return *x.GameName
	}
	return ""
}

func (x *CMsgClientPersonaState_Friend) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGameDataBlob() []byte {
	if x != nil {
		return x.GameDataBlob
	}
	return nil
}

func (x *CMsgClientPersonaState_Friend) GetClanData() *CMsgClientPersonaState_Friend_ClanData {
	if x != nil {
		return x.ClanData
	}
	return nil
}

func (x *CMsgClientPersonaState_Friend) GetClanTag() string {
	if x != nil && x.ClanTag != nil {
		return *x.ClanTag
	}
	return ""
}

func (x *CMsgClientPersonaState_Friend) GetRichPresence() []*CMsgClientPersonaState_Friend_KV {
	if x != nil {
		return x.RichPresence
	}
	return nil
}

func (x *CMsgClientPersonaState_Friend) GetBroadcastId() uint64 {
	if x != nil && x.BroadcastId != nil {
		return *x.BroadcastId
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetGameLobbyId() uint64 {
	if x != nil && x.GameLobbyId != nil {
		return *x.GameLobbyId
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetWatchingBroadcastAccountid() uint32 {
	if x != nil && x.WatchingBroadcastAccountid != nil {
		return *x.WatchingBroadcastAccountid
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetWatchingBroadcastAppid() uint32 {
	if x != nil && x.WatchingBroadcastAppid != nil {
		return *x.WatchingBroadcastAppid
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetWatchingBroadcastViewers() uint32 {
	if x != nil && x.WatchingBroadcastViewers != nil {
		return *x.WatchingBroadcastViewers
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend) GetWatchingBroadcastTitle() string {
	if x != nil && x.WatchingBroadcastTitle != nil {
		return *x.WatchingBroadcastTitle
	}
	return ""
}

func (x *CMsgClientPersonaState_Friend) GetIsCommunityBanned() bool {
	if x != nil && x.IsCommunityBanned != nil {
		return *x.IsCommunityBanned
	}
	return false
}

func (x *CMsgClientPersonaState_Friend) GetPlayerNamePendingReview() bool {
	if x != nil && x.PlayerNamePendingReview != nil {
		return *x.PlayerNamePendingReview
	}
	return false
}

func (x *CMsgClientPersonaState_Friend) GetAvatarPendingReview() bool {
	if x != nil && x.AvatarPendingReview != nil {
		return *x.AvatarPendingReview
	}
	return false
}

func (x *CMsgClientPersonaState_Friend) GetOnSteamDeck() bool {
	if x != nil && x.OnSteamDeck != nil {
		return *x.OnSteamDeck
	}
	return false
}

type CMsgClientPersonaState_Friend_ClanData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OggAppId      *uint32                `protobuf:"varint,1,opt,name=ogg_app_id,json=oggAppId" json:"ogg_app_id,omitempty"`
	ChatGroupId   *uint64                `protobuf:"varint,2,opt,name=chat_group_id,json=chatGroupId" json:"chat_group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientPersonaState_Friend_ClanData) Reset() {
	*x = CMsgClientPersonaState_Friend_ClanData{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPersonaState_Friend_ClanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPersonaState_Friend_ClanData) ProtoMessage() {}

func (x *CMsgClientPersonaState_Friend_ClanData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPersonaState_Friend_ClanData.ProtoReflect.Descriptor instead.
func (*CMsgClientPersonaState_Friend_ClanData) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *CMsgClientPersonaState_Friend_ClanData) GetOggAppId() uint32 {
	if x != nil && x.OggAppId != nil {
		return *x.OggAppId
	}
	return 0
}

func (x *CMsgClientPersonaState_Friend_ClanData) GetChatGroupId() uint64 {
	if x != nil && x.ChatGroupId != nil {
		return *x.ChatGroupId
	}
	return 0
}

type CMsgClientPersonaState_Friend_KV struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientPersonaState_Friend_KV) Reset() {
	*x = CMsgClientPersonaState_Friend_KV{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientPersonaState_Friend_KV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPersonaState_Friend_KV) ProtoMessage() {}

func (x *CMsgClientPersonaState_Friend_KV) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPersonaState_Friend_KV.ProtoReflect.Descriptor instead.
func (*CMsgClientPersonaState_Friend_KV) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{14, 0, 1}
}

func (x *CMsgClientPersonaState_Friend_KV) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgClientPersonaState_Friend_KV) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgClientEmoticonList_Emoticon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Count         *int32                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	TimeLastUsed  *uint32                `protobuf:"varint,3,opt,name=time_last_used,json=timeLastUsed" json:"time_last_used,omitempty"`
	UseCount      *uint32                `protobuf:"varint,4,opt,name=use_count,json=useCount" json:"use_count,omitempty"`
	TimeReceived  *uint32                `protobuf:"varint,5,opt,name=time_received,json=timeReceived" json:"time_received,omitempty"`
	Appid         *uint32                `protobuf:"varint,6,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEmoticonList_Emoticon) Reset() {
	*x = CMsgClientEmoticonList_Emoticon{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEmoticonList_Emoticon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEmoticonList_Emoticon) ProtoMessage() {}

func (x *CMsgClientEmoticonList_Emoticon) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEmoticonList_Emoticon.ProtoReflect.Descriptor instead.
func (*CMsgClientEmoticonList_Emoticon) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{28, 0}
}

func (x *CMsgClientEmoticonList_Emoticon) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgClientEmoticonList_Emoticon) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CMsgClientEmoticonList_Emoticon) GetTimeLastUsed() uint32 {
	if x != nil && x.TimeLastUsed != nil {
		return *x.TimeLastUsed
	}
	return 0
}

func (x *CMsgClientEmoticonList_Emoticon) GetUseCount() uint32 {
	if x != nil && x.UseCount != nil {
		return *x.UseCount
	}
	return 0
}

func (x *CMsgClientEmoticonList_Emoticon) GetTimeReceived() uint32 {
	if x != nil && x.TimeReceived != nil {
		return *x.TimeReceived
	}
	return 0
}

func (x *CMsgClientEmoticonList_Emoticon) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgClientEmoticonList_Sticker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Count         *int32                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	TimeReceived  *uint32                `protobuf:"varint,3,opt,name=time_received,json=timeReceived" json:"time_received,omitempty"`
	Appid         *uint32                `protobuf:"varint,4,opt,name=appid" json:"appid,omitempty"`
	TimeLastUsed  *uint32                `protobuf:"varint,5,opt,name=time_last_used,json=timeLastUsed" json:"time_last_used,omitempty"`
	UseCount      *uint32                `protobuf:"varint,6,opt,name=use_count,json=useCount" json:"use_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEmoticonList_Sticker) Reset() {
	*x = CMsgClientEmoticonList_Sticker{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEmoticonList_Sticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEmoticonList_Sticker) ProtoMessage() {}

func (x *CMsgClientEmoticonList_Sticker) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEmoticonList_Sticker.ProtoReflect.Descriptor instead.
func (*CMsgClientEmoticonList_Sticker) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{28, 1}
}

func (x *CMsgClientEmoticonList_Sticker) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgClientEmoticonList_Sticker) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CMsgClientEmoticonList_Sticker) GetTimeReceived() uint32 {
	if x != nil && x.TimeReceived != nil {
		return *x.TimeReceived
	}
	return 0
}

func (x *CMsgClientEmoticonList_Sticker) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientEmoticonList_Sticker) GetTimeLastUsed() uint32 {
	if x != nil && x.TimeLastUsed != nil {
		return *x.TimeLastUsed
	}
	return 0
}

func (x *CMsgClientEmoticonList_Sticker) GetUseCount() uint32 {
	if x != nil && x.UseCount != nil {
		return *x.UseCount
	}
	return 0
}

type CMsgClientEmoticonList_Effect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Count         *int32                 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	TimeReceived  *uint32                `protobuf:"varint,3,opt,name=time_received,json=timeReceived" json:"time_received,omitempty"`
	InfiniteUse   *bool                  `protobuf:"varint,4,opt,name=infinite_use,json=infiniteUse" json:"infinite_use,omitempty"`
	Appid         *uint32                `protobuf:"varint,5,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEmoticonList_Effect) Reset() {
	*x = CMsgClientEmoticonList_Effect{}
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEmoticonList_Effect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEmoticonList_Effect) ProtoMessage() {}

func (x *CMsgClientEmoticonList_Effect) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_friends_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEmoticonList_Effect.ProtoReflect.Descriptor instead.
func (*CMsgClientEmoticonList_Effect) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_friends_proto_rawDescGZIP(), []int{28, 2}
}

func (x *CMsgClientEmoticonList_Effect) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgClientEmoticonList_Effect) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CMsgClientEmoticonList_Effect) GetTimeReceived() uint32 {
	if x != nil && x.TimeReceived != nil {
		return *x.TimeReceived
	}
	return 0
}

func (x *CMsgClientEmoticonList_Effect) GetInfiniteUse() bool {
	if x != nil && x.InfiniteUse != nil {
		return *x.InfiniteUse
	}
	return false
}

func (x *CMsgClientEmoticonList_Effect) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

var File_steammessages_clientserver_friends_proto protoreflect.FileDescriptor

const file_steammessages_clientserver_friends_proto_rawDesc = "" +
	"\n" +
	"(steammessages_clientserver_friends.proto\x1a\x18steammessages_base.proto\"\xd1\x01\n" +
	"\x13CMsgClientFriendMsg\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12&\n" +
	"\x0fchat_entry_type\x18\x02 \x01(\x05R\rchatEntryType\x12\x18\n" +
	"\amessage\x18\x03 \x01(\fR\amessage\x128\n" +
	"\x18rtime32_server_timestamp\x18\x04 \x01(\aR\x16rtime32ServerTimestamp\x12$\n" +
	"\x0eecho_to_sender\x18\x05 \x01(\bR\fechoToSender\"\xee\x01\n" +
	"\x1bCMsgClientFriendMsgIncoming\x12!\n" +
	"\fsteamid_from\x18\x01 \x01(\x06R\vsteamidFrom\x12&\n" +
	"\x0fchat_entry_type\x18\x02 \x01(\x05R\rchatEntryType\x120\n" +
	"\x14from_limited_account\x18\x03 \x01(\bR\x12fromLimitedAccount\x12\x18\n" +
	"\amessage\x18\x04 \x01(\fR\amessage\x128\n" +
	"\x18rtime32_server_timestamp\x18\x05 \x01(\aR\x16rtime32ServerTimestamp\"y\n" +
	"\x13CMsgClientAddFriend\x12$\n" +
	"\x0esteamid_to_add\x18\x01 \x01(\x06R\fsteamidToAdd\x12<\n" +
	"\x1baccountname_or_email_to_add\x18\x02 \x01(\tR\x17accountnameOrEmailToAdd\"\x8e\x01\n" +
	"\x1bCMsgClientAddFriendResponse\x12\x1b\n" +
	"\aeresult\x18\x01 \x01(\x05:\x012R\aeresult\x12$\n" +
	"\x0esteam_id_added\x18\x02 \x01(\x06R\fsteamIdAdded\x12,\n" +
	"\x12persona_name_added\x18\x03 \x01(\tR\x10personaNameAdded\"4\n" +
	"\x16CMsgClientRemoveFriend\x12\x1a\n" +
	"\bfriendid\x18\x01 \x01(\x06R\bfriendid\"F\n" +
	"\x14CMsgClientHideFriend\x12\x1a\n" +
	"\bfriendid\x18\x01 \x01(\x06R\bfriendid\x12\x12\n" +
	"\x04hide\x18\x02 \x01(\bR\x04hide\"\xd6\x02\n" +
	"\x15CMsgClientFriendsList\x12\"\n" +
	"\fbincremental\x18\x01 \x01(\bR\fbincremental\x127\n" +
	"\afriends\x18\x02 \x03(\v2\x1d.CMsgClientFriendsList.FriendR\afriends\x12(\n" +
	"\x10max_friend_count\x18\x03 \x01(\rR\x0emaxFriendCount\x12.\n" +
	"\x13active_friend_count\x18\x04 \x01(\rR\x11activeFriendCount\x12*\n" +
	"\x11friends_limit_hit\x18\x05 \x01(\bR\x0ffriendsLimitHit\x1aZ\n" +
	"\x06Friend\x12\x1e\n" +
	"\n" +
	"ulfriendid\x18\x01 \x01(\x06R\n" +
	"ulfriendid\x120\n" +
	"\x13efriendrelationship\x18\x02 \x01(\rR\x13efriendrelationship\"\xa5\x03\n" +
	"\x1bCMsgClientFriendsGroupsList\x12\x1a\n" +
	"\bbremoval\x18\x01 \x01(\bR\bbremoval\x12\"\n" +
	"\fbincremental\x18\x02 \x01(\bR\fbincremental\x12L\n" +
	"\ffriendGroups\x18\x03 \x03(\v2(.CMsgClientFriendsGroupsList.FriendGroupR\ffriendGroups\x12U\n" +
	"\vmemberships\x18\x04 \x03(\v23.CMsgClientFriendsGroupsList.FriendGroupsMembershipR\vmemberships\x1aM\n" +
	"\vFriendGroup\x12\x1a\n" +
	"\bnGroupID\x18\x01 \x01(\x05R\bnGroupID\x12\"\n" +
	"\fstrGroupName\x18\x02 \x01(\tR\fstrGroupName\x1aR\n" +
	"\x16FriendGroupsMembership\x12\x1c\n" +
	"\tulSteamID\x18\x01 \x01(\x06R\tulSteamID\x12\x1a\n" +
	"\bnGroupID\x18\x02 \x01(\x05R\bnGroupID\"\xee\x01\n" +
	"\x1cCMsgClientPlayerNicknameList\x12\x18\n" +
	"\aremoval\x18\x01 \x01(\bR\aremoval\x12 \n" +
	"\vincremental\x18\x02 \x01(\bR\vincremental\x12J\n" +
	"\tnicknames\x18\x03 \x03(\v2,.CMsgClientPlayerNicknameList.PlayerNicknameR\tnicknames\x1aF\n" +
	"\x0ePlayerNickname\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x1a\n" +
	"\bnickname\x18\x03 \x01(\tR\bnickname\"S\n" +
	"\x1bCMsgClientSetPlayerNickname\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\"?\n" +
	"#CMsgClientSetPlayerNicknameResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\"o\n" +
	"\x1bCMsgClientRequestFriendData\x126\n" +
	"\x17persona_state_requested\x18\x01 \x01(\rR\x15personaStateRequested\x12\x18\n" +
	"\afriends\x18\x02 \x03(\x06R\afriends\"\xf4\x02\n" +
	"\x16CMsgClientChangeStatus\x12#\n" +
	"\rpersona_state\x18\x01 \x01(\rR\fpersonaState\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x123\n" +
	"\x16is_auto_generated_name\x18\x03 \x01(\bR\x13isAutoGeneratedName\x12#\n" +
	"\rhigh_priority\x18\x04 \x01(\bR\fhighPriority\x12-\n" +
	"\x13persona_set_by_user\x18\x05 \x01(\bR\x10personaSetByUser\x121\n" +
	"\x13persona_state_flags\x18\x06 \x01(\r:\x010R\x11personaStateFlags\x122\n" +
	"\x15need_persona_response\x18\a \x01(\bR\x13needPersonaResponse\x12$\n" +
	"\x0eis_client_idle\x18\b \x01(\bR\fisClientIdle\"T\n" +
	"\x19CMsgPersonaChangeResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\"\xe6\f\n" +
	"\x16CMsgClientPersonaState\x12!\n" +
	"\fstatus_flags\x18\x01 \x01(\rR\vstatusFlags\x128\n" +
	"\afriends\x18\x02 \x03(\v2\x1e.CMsgClientPersonaState.FriendR\afriends\x1a\xee\v\n" +
	"\x06Friend\x12\x1a\n" +
	"\bfriendid\x18\x01 \x01(\x06R\bfriendid\x12#\n" +
	"\rpersona_state\x18\x02 \x01(\rR\fpersonaState\x12+\n" +
	"\x12game_played_app_id\x18\x03 \x01(\rR\x0fgamePlayedAppId\x12$\n" +
	"\x0egame_server_ip\x18\x04 \x01(\rR\fgameServerIp\x12(\n" +
	"\x10game_server_port\x18\x05 \x01(\rR\x0egameServerPort\x12.\n" +
	"\x13persona_state_flags\x18\x06 \x01(\rR\x11personaStateFlags\x128\n" +
	"\x18online_session_instances\x18\a \x01(\rR\x16onlineSessionInstances\x12-\n" +
	"\x13persona_set_by_user\x18\n" +
	" \x01(\bR\x10personaSetByUser\x12\x1f\n" +
	"\vplayer_name\x18\x0f \x01(\tR\n" +
	"playerName\x12\x1d\n" +
	"\n" +
	"query_port\x18\x14 \x01(\rR\tqueryPort\x12%\n" +
	"\x0esteamid_source\x18\x19 \x01(\x06R\rsteamidSource\x12\x1f\n" +
	"\vavatar_hash\x18\x1f \x01(\fR\n" +
	"avatarHash\x12\x1f\n" +
	"\vlast_logoff\x18- \x01(\rR\n" +
	"lastLogoff\x12\x1d\n" +
	"\n" +
	"last_logon\x18. \x01(\rR\tlastLogon\x12(\n" +
	"\x10last_seen_online\x18/ \x01(\rR\x0elastSeenOnline\x12\x1b\n" +
	"\tclan_rank\x182 \x01(\rR\bclanRank\x12\x1b\n" +
	"\tgame_name\x187 \x01(\tR\bgameName\x12\x16\n" +
	"\x06gameid\x188 \x01(\x06R\x06gameid\x12$\n" +
	"\x0egame_data_blob\x18< \x01(\fR\fgameDataBlob\x12D\n" +
	"\tclan_data\x18@ \x01(\v2'.CMsgClientPersonaState.Friend.ClanDataR\bclanData\x12\x19\n" +
	"\bclan_tag\x18A \x01(\tR\aclanTag\x12F\n" +
	"\rrich_presence\x18G \x03(\v2!.CMsgClientPersonaState.Friend.KVR\frichPresence\x12!\n" +
	"\fbroadcast_id\x18H \x01(\x06R\vbroadcastId\x12\"\n" +
	"\rgame_lobby_id\x18I \x01(\x06R\vgameLobbyId\x12@\n" +
	"\x1cwatching_broadcast_accountid\x18J \x01(\rR\x1awatchingBroadcastAccountid\x128\n" +
	"\x18watching_broadcast_appid\x18K \x01(\rR\x16watchingBroadcastAppid\x12<\n" +
	"\x1awatching_broadcast_viewers\x18L \x01(\rR\x18watchingBroadcastViewers\x128\n" +
	"\x18watching_broadcast_title\x18M \x01(\tR\x16watchingBroadcastTitle\x12.\n" +
	"\x13is_community_banned\x18N \x01(\bR\x11isCommunityBanned\x12;\n" +
	"\x1aplayer_name_pending_review\x18O \x01(\bR\x17playerNamePendingReview\x122\n" +
	"\x15avatar_pending_review\x18P \x01(\bR\x13avatarPendingReview\x12\"\n" +
	"\ron_steam_deck\x18Q \x01(\bR\vonSteamDeck\x1aL\n" +
	"\bClanData\x12\x1c\n" +
	"\n" +
	"ogg_app_id\x18\x01 \x01(\rR\boggAppId\x12\"\n" +
	"\rchat_group_id\x18\x02 \x01(\x04R\vchatGroupId\x1a,\n" +
	"\x02KV\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"D\n" +
	"\x1bCMsgClientFriendProfileInfo\x12%\n" +
	"\x0esteamid_friend\x18\x01 \x01(\x06R\rsteamidFriend\"\xbe\x02\n" +
	"#CMsgClientFriendProfileInfoResponse\x12\x1b\n" +
	"\aeresult\x18\x01 \x01(\x05:\x012R\aeresult\x12%\n" +
	"\x0esteamid_friend\x18\x02 \x01(\x06R\rsteamidFriend\x12!\n" +
	"\ftime_created\x18\x03 \x01(\rR\vtimeCreated\x12\x1b\n" +
	"\treal_name\x18\x04 \x01(\tR\brealName\x12\x1b\n" +
	"\tcity_name\x18\x05 \x01(\tR\bcityName\x12\x1d\n" +
	"\n" +
	"state_name\x18\x06 \x01(\tR\tstateName\x12!\n" +
	"\fcountry_name\x18\a \x01(\tR\vcountryName\x12\x1a\n" +
	"\bheadline\x18\b \x01(\tR\bheadline\x12\x18\n" +
	"\asummary\x18\t \x01(\tR\asummary\"\x7f\n" +
	"\x1cCMsgClientCreateFriendsGroup\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x1c\n" +
	"\tgroupname\x18\x02 \x01(\tR\tgroupname\x12'\n" +
	"\x0fsteamid_friends\x18\x03 \x03(\x06R\x0esteamidFriends\"Z\n" +
	"$CMsgClientCreateFriendsGroupResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\x12\x18\n" +
	"\agroupid\x18\x02 \x01(\x05R\agroupid\"R\n" +
	"\x1cCMsgClientDeleteFriendsGroup\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x18\n" +
	"\agroupid\x18\x02 \x01(\x05R\agroupid\"@\n" +
	"$CMsgClientDeleteFriendsGroupResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\"\xc2\x01\n" +
	"\x1cCMsgClientManageFriendsGroup\x12\x18\n" +
	"\agroupid\x18\x01 \x01(\x05R\agroupid\x12\x1c\n" +
	"\tgroupname\x18\x02 \x01(\tR\tgroupname\x122\n" +
	"\x15steamid_friends_added\x18\x03 \x03(\x06R\x13steamidFriendsAdded\x126\n" +
	"\x17steamid_friends_removed\x18\x04 \x03(\x06R\x15steamidFriendsRemoved\"@\n" +
	"$CMsgClientManageFriendsGroupResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\"X\n" +
	"\x1aCMsgClientAddFriendToGroup\x12\x18\n" +
	"\agroupid\x18\x01 \x01(\x05R\agroupid\x12 \n" +
	"\vsteamiduser\x18\x02 \x01(\x06R\vsteamiduser\">\n" +
	"\"CMsgClientAddFriendToGroupResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\"]\n" +
	"\x1fCMsgClientRemoveFriendFromGroup\x12\x18\n" +
	"\agroupid\x18\x01 \x01(\x05R\agroupid\x12 \n" +
	"\vsteamiduser\x18\x02 \x01(\x06R\vsteamiduser\"C\n" +
	"'CMsgClientRemoveFriendFromGroupResponse\x12\x18\n" +
	"\aeresult\x18\x01 \x01(\rR\aeresult\"\x1b\n" +
	"\x19CMsgClientGetEmoticonList\"\xcb\x05\n" +
	"\x16CMsgClientEmoticonList\x12>\n" +
	"\temoticons\x18\x01 \x03(\v2 .CMsgClientEmoticonList.EmoticonR\temoticons\x12;\n" +
	"\bstickers\x18\x02 \x03(\v2\x1f.CMsgClientEmoticonList.StickerR\bstickers\x128\n" +
	"\aeffects\x18\x03 \x03(\v2\x1e.CMsgClientEmoticonList.EffectR\aeffects\x1a\xb2\x01\n" +
	"\bEmoticon\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12$\n" +
	"\x0etime_last_used\x18\x03 \x01(\rR\ftimeLastUsed\x12\x1b\n" +
	"\tuse_count\x18\x04 \x01(\rR\buseCount\x12#\n" +
	"\rtime_received\x18\x05 \x01(\rR\ftimeReceived\x12\x14\n" +
	"\x05appid\x18\x06 \x01(\rR\x05appid\x1a\xb1\x01\n" +
	"\aSticker\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12#\n" +
	"\rtime_received\x18\x03 \x01(\rR\ftimeReceived\x12\x14\n" +
	"\x05appid\x18\x04 \x01(\rR\x05appid\x12$\n" +
	"\x0etime_last_used\x18\x05 \x01(\rR\ftimeLastUsed\x12\x1b\n" +
	"\tuse_count\x18\x06 \x01(\rR\buseCount\x1a\x90\x01\n" +
	"\x06Effect\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12#\n" +
	"\rtime_received\x18\x03 \x01(\rR\ftimeReceived\x12!\n" +
	"\finfinite_use\x18\x04 \x01(\bR\vinfiniteUse\x12\x14\n" +
	"\x05appid\x18\x05 \x01(\rR\x05appidB7H\x01Z0github.com/koteesy/go-steam/v3/protocol/protobuf\x80\x01\x00"

var (
	file_steammessages_clientserver_friends_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_friends_proto_rawDescData []byte
)

func file_steammessages_clientserver_friends_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_friends_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_friends_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_friends_proto_rawDesc), len(file_steammessages_clientserver_friends_proto_rawDesc)))
	})
	return file_steammessages_clientserver_friends_proto_rawDescData
}

var file_steammessages_clientserver_friends_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_steammessages_clientserver_friends_proto_goTypes = []any{
	(*CMsgClientFriendMsg)(nil),                                // 0: CMsgClientFriendMsg
	(*CMsgClientFriendMsgIncoming)(nil),                        // 1: CMsgClientFriendMsgIncoming
	(*CMsgClientAddFriend)(nil),                                // 2: CMsgClientAddFriend
	(*CMsgClientAddFriendResponse)(nil),                        // 3: CMsgClientAddFriendResponse
	(*CMsgClientRemoveFriend)(nil),                             // 4: CMsgClientRemoveFriend
	(*CMsgClientHideFriend)(nil),                               // 5: CMsgClientHideFriend
	(*CMsgClientFriendsList)(nil),                              // 6: CMsgClientFriendsList
	(*CMsgClientFriendsGroupsList)(nil),                        // 7: CMsgClientFriendsGroupsList
	(*CMsgClientPlayerNicknameList)(nil),                       // 8: CMsgClientPlayerNicknameList
	(*CMsgClientSetPlayerNickname)(nil),                        // 9: CMsgClientSetPlayerNickname
	(*CMsgClientSetPlayerNicknameResponse)(nil),                // 10: CMsgClientSetPlayerNicknameResponse
	(*CMsgClientRequestFriendData)(nil),                        // 11: CMsgClientRequestFriendData
	(*CMsgClientChangeStatus)(nil),                             // 12: CMsgClientChangeStatus
	(*CMsgPersonaChangeResponse)(nil),                          // 13: CMsgPersonaChangeResponse
	(*CMsgClientPersonaState)(nil),                             // 14: CMsgClientPersonaState
	(*CMsgClientFriendProfileInfo)(nil),                        // 15: CMsgClientFriendProfileInfo
	(*CMsgClientFriendProfileInfoResponse)(nil),                // 16: CMsgClientFriendProfileInfoResponse
	(*CMsgClientCreateFriendsGroup)(nil),                       // 17: CMsgClientCreateFriendsGroup
	(*CMsgClientCreateFriendsGroupResponse)(nil),               // 18: CMsgClientCreateFriendsGroupResponse
	(*CMsgClientDeleteFriendsGroup)(nil),                       // 19: CMsgClientDeleteFriendsGroup
	(*CMsgClientDeleteFriendsGroupResponse)(nil),               // 20: CMsgClientDeleteFriendsGroupResponse
	(*CMsgClientManageFriendsGroup)(nil),                       // 21: CMsgClientManageFriendsGroup
	(*CMsgClientManageFriendsGroupResponse)(nil),               // 22: CMsgClientManageFriendsGroupResponse
	(*CMsgClientAddFriendToGroup)(nil),                         // 23: CMsgClientAddFriendToGroup
	(*CMsgClientAddFriendToGroupResponse)(nil),                 // 24: CMsgClientAddFriendToGroupResponse
	(*CMsgClientRemoveFriendFromGroup)(nil),                    // 25: CMsgClientRemoveFriendFromGroup
	(*CMsgClientRemoveFriendFromGroupResponse)(nil),            // 26: CMsgClientRemoveFriendFromGroupResponse
	(*CMsgClientGetEmoticonList)(nil),                          // 27: CMsgClientGetEmoticonList
	(*CMsgClientEmoticonList)(nil),                             // 28: CMsgClientEmoticonList
	(*CMsgClientFriendsList_Friend)(nil),                       // 29: CMsgClientFriendsList.Friend
	(*CMsgClientFriendsGroupsList_FriendGroup)(nil),            // 30: CMsgClientFriendsGroupsList.FriendGroup
	(*CMsgClientFriendsGroupsList_FriendGroupsMembership)(nil), // 31: CMsgClientFriendsGroupsList.FriendGroupsMembership
	(*CMsgClientPlayerNicknameList_PlayerNickname)(nil),        // 32: CMsgClientPlayerNicknameList.PlayerNickname
	(*CMsgClientPersonaState_Friend)(nil),                      // 33: CMsgClientPersonaState.Friend
	(*CMsgClientPersonaState_Friend_ClanData)(nil),             // 34: CMsgClientPersonaState.Friend.ClanData
	(*CMsgClientPersonaState_Friend_KV)(nil),                   // 35: CMsgClientPersonaState.Friend.KV
	(*CMsgClientEmoticonList_Emoticon)(nil),                    // 36: CMsgClientEmoticonList.Emoticon
	(*CMsgClientEmoticonList_Sticker)(nil),                     // 37: CMsgClientEmoticonList.Sticker
	(*CMsgClientEmoticonList_Effect)(nil),                      // 38: CMsgClientEmoticonList.Effect
}
var file_steammessages_clientserver_friends_proto_depIdxs = []int32{
	29, // 0: CMsgClientFriendsList.friends:type_name -> CMsgClientFriendsList.Friend
	30, // 1: CMsgClientFriendsGroupsList.friendGroups:type_name -> CMsgClientFriendsGroupsList.FriendGroup
	31, // 2: CMsgClientFriendsGroupsList.memberships:type_name -> CMsgClientFriendsGroupsList.FriendGroupsMembership
	32, // 3: CMsgClientPlayerNicknameList.nicknames:type_name -> CMsgClientPlayerNicknameList.PlayerNickname
	33, // 4: CMsgClientPersonaState.friends:type_name -> CMsgClientPersonaState.Friend
	36, // 5: CMsgClientEmoticonList.emoticons:type_name -> CMsgClientEmoticonList.Emoticon
	37, // 6: CMsgClientEmoticonList.stickers:type_name -> CMsgClientEmoticonList.Sticker
	38, // 7: CMsgClientEmoticonList.effects:type_name -> CMsgClientEmoticonList.Effect
	34, // 8: CMsgClientPersonaState.Friend.clan_data:type_name -> CMsgClientPersonaState.Friend.ClanData
	35, // 9: CMsgClientPersonaState.Friend.rich_presence:type_name -> CMsgClientPersonaState.Friend.KV
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_friends_proto_init() }
func file_steammessages_clientserver_friends_proto_init() {
	if File_steammessages_clientserver_friends_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_friends_proto_rawDesc), len(file_steammessages_clientserver_friends_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_friends_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_friends_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_friends_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_friends_proto = out.File
	file_steammessages_clientserver_friends_proto_goTypes = nil
	file_steammessages_clientserver_friends_proto_depIdxs = nil
}
