// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: gcsdk_gcmessages.proto

package protobuf

import (
	
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartnerAccountType int32

const (
	PartnerAccountType_PARTNER_NONE          PartnerAccountType = 0
	PartnerAccountType_PARTNER_PERFECT_WORLD PartnerAccountType = 1
	PartnerAccountType_PARTNER_NEXON         PartnerAccountType = 2
)

// Enum value maps for PartnerAccountType.
var (
	PartnerAccountType_name = map[int32]string{
		0: "PARTNER_NONE",
		1: "PARTNER_PERFECT_WORLD",
		2: "PARTNER_NEXON",
	}
	PartnerAccountType_value = map[string]int32{
		"PARTNER_NONE":          0,
		"PARTNER_PERFECT_WORLD": 1,
		"PARTNER_NEXON":         2,
	}
)

func (x PartnerAccountType) Enum() *PartnerAccountType {
	p := new(PartnerAccountType)
	*p = x
	return p
}

func (x PartnerAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PartnerAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_gcsdk_gcmessages_proto_enumTypes[0].Descriptor()
}

func (PartnerAccountType) Type() protoreflect.EnumType {
	return &file_gcsdk_gcmessages_proto_enumTypes[0]
}

func (x PartnerAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PartnerAccountType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PartnerAccountType(num)
	return nil
}

// Deprecated: Use PartnerAccountType.Descriptor instead.
func (PartnerAccountType) EnumDescriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

type GCConnectionStatus int32

const (
	GCConnectionStatus_GCConnectionStatus_HAVE_SESSION              GCConnectionStatus = 0
	GCConnectionStatus_GCConnectionStatus_GC_GOING_DOWN             GCConnectionStatus = 1
	GCConnectionStatus_GCConnectionStatus_NO_SESSION                GCConnectionStatus = 2
	GCConnectionStatus_GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE GCConnectionStatus = 3
	GCConnectionStatus_GCConnectionStatus_NO_STEAM                  GCConnectionStatus = 4
	GCConnectionStatus_GCConnectionStatus_SUSPENDED                 GCConnectionStatus = 5
)

// Enum value maps for GCConnectionStatus.
var (
	GCConnectionStatus_name = map[int32]string{
		0: "GCConnectionStatus_HAVE_SESSION",
		1: "GCConnectionStatus_GC_GOING_DOWN",
		2: "GCConnectionStatus_NO_SESSION",
		3: "GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE",
		4: "GCConnectionStatus_NO_STEAM",
		5: "GCConnectionStatus_SUSPENDED",
	}
	GCConnectionStatus_value = map[string]int32{
		"GCConnectionStatus_HAVE_SESSION":              0,
		"GCConnectionStatus_GC_GOING_DOWN":             1,
		"GCConnectionStatus_NO_SESSION":                2,
		"GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE": 3,
		"GCConnectionStatus_NO_STEAM":                  4,
		"GCConnectionStatus_SUSPENDED":                 5,
	}
)

func (x GCConnectionStatus) Enum() *GCConnectionStatus {
	p := new(GCConnectionStatus)
	*p = x
	return p
}

func (x GCConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_gcsdk_gcmessages_proto_enumTypes[1].Descriptor()
}

func (GCConnectionStatus) Type() protoreflect.EnumType {
	return &file_gcsdk_gcmessages_proto_enumTypes[1]
}

func (x GCConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GCConnectionStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GCConnectionStatus(num)
	return nil
}

// Deprecated: Use GCConnectionStatus.Descriptor instead.
func (GCConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

type CMsgSOIDOwner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *uint32                `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id            *uint64                `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOIDOwner) Reset() {
	*x = CMsgSOIDOwner{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOIDOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOIDOwner) ProtoMessage() {}

func (x *CMsgSOIDOwner) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOIDOwner.ProtoReflect.Descriptor instead.
func (*CMsgSOIDOwner) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSOIDOwner) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSOIDOwner) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type CMsgSOSingleObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *uint64                `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	TypeId        *int32                 `protobuf:"varint,2,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData    []byte                 `protobuf:"bytes,3,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
	Version       *uint64                `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	OwnerSoid     *CMsgSOIDOwner         `protobuf:"bytes,5,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId     *uint32                `protobuf:"varint,6,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOSingleObject) Reset() {
	*x = CMsgSOSingleObject{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOSingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOSingleObject) ProtoMessage() {}

func (x *CMsgSOSingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOSingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOSingleObject) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSOSingleObject) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOSingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOSingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

func (x *CMsgSOSingleObject) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOSingleObject) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOSingleObject) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOMultipleObjects struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Owner         *uint64                               `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects       []*CMsgSOMultipleObjects_SingleObject `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version       *uint64                               `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid     *CMsgSOIDOwner                        `protobuf:"bytes,6,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId     *uint32                               `protobuf:"varint,7,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOMultipleObjects) Reset() {
	*x = CMsgSOMultipleObjects{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOMultipleObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects) ProtoMessage() {}

func (x *CMsgSOMultipleObjects) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSOMultipleObjects) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetObjects() []*CMsgSOMultipleObjects_SingleObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOMultipleObjects) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOMultipleObjects) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgSOCacheSubscribed struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Owner         *uint64                                 `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Objects       []*CMsgSOCacheSubscribed_SubscribedType `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Version       *uint64                                 `protobuf:"fixed64,3,opt,name=version" json:"version,omitempty"`
	OwnerSoid     *CMsgSOIDOwner                          `protobuf:"bytes,4,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId     *uint32                                 `protobuf:"varint,5,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList   []uint32                                `protobuf:"varint,6,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion   *uint64                                 `protobuf:"fixed64,7,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheSubscribed) Reset() {
	*x = CMsgSOCacheSubscribed{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheSubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSOCacheSubscribed) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetObjects() []*CMsgSOCacheSubscribed_SubscribedType {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribed) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscribedUpToDate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *uint64                `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	OwnerSoid     *CMsgSOIDOwner         `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId     *uint32                `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList   []uint32               `protobuf:"varint,4,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion   *uint64                `protobuf:"fixed64,5,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheSubscribedUpToDate) Reset() {
	*x = CMsgSOCacheSubscribedUpToDate{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheSubscribedUpToDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribedUpToDate) ProtoMessage() {}

func (x *CMsgSOCacheSubscribedUpToDate) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribedUpToDate.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribedUpToDate) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSOCacheSubscribedUpToDate) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscribedUpToDate) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscribedUpToDate) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheUnsubscribed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *uint64                `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheUnsubscribed) Reset() {
	*x = CMsgSOCacheUnsubscribed{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheUnsubscribed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheUnsubscribed) ProtoMessage() {}

func (x *CMsgSOCacheUnsubscribed) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheUnsubscribed.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheUnsubscribed) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSOCacheUnsubscribed) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

type CMsgSOCacheSubscriptionCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *uint64                `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	Version       *uint64                `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	OwnerSoid     *CMsgSOIDOwner         `protobuf:"bytes,3,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	ServiceId     *uint32                `protobuf:"varint,4,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	ServiceList   []uint32               `protobuf:"varint,5,rep,name=service_list,json=serviceList" json:"service_list,omitempty"`
	SyncVersion   *uint64                `protobuf:"fixed64,6,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheSubscriptionCheck) Reset() {
	*x = CMsgSOCacheSubscriptionCheck{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheSubscriptionCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionCheck) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionCheck) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionCheck.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionCheck) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionCheck) GetServiceList() []uint32 {
	if x != nil {
		return x.ServiceList
	}
	return nil
}

func (x *CMsgSOCacheSubscriptionCheck) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

type CMsgSOCacheSubscriptionRefresh struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Owner         *uint64                `protobuf:"fixed64,1,opt,name=owner" json:"owner,omitempty"`
	OwnerSoid     *CMsgSOIDOwner         `protobuf:"bytes,2,opt,name=owner_soid,json=ownerSoid" json:"owner_soid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheSubscriptionRefresh) Reset() {
	*x = CMsgSOCacheSubscriptionRefresh{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheSubscriptionRefresh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscriptionRefresh) ProtoMessage() {}

func (x *CMsgSOCacheSubscriptionRefresh) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscriptionRefresh.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscriptionRefresh) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *CMsgSOCacheSubscriptionRefresh) GetOwnerSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.OwnerSoid
	}
	return nil
}

type CMsgSOCacheVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *uint64                `protobuf:"fixed64,1,opt,name=version" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheVersion) Reset() {
	*x = CMsgSOCacheVersion{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheVersion) ProtoMessage() {}

func (x *CMsgSOCacheVersion) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheVersion) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgSOCacheVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type CMsgGCMultiplexMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msgtype       *uint32                `protobuf:"varint,1,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	Steamids      []uint64               `protobuf:"fixed64,3,rep,name=steamids" json:"steamids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCMultiplexMessage) Reset() {
	*x = CMsgGCMultiplexMessage{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCMultiplexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCMultiplexMessage) ProtoMessage() {}

func (x *CMsgGCMultiplexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCMultiplexMessage.ProtoReflect.Descriptor instead.
func (*CMsgGCMultiplexMessage) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgGCMultiplexMessage) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

func (x *CMsgGCMultiplexMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgGCMultiplexMessage) GetSteamids() []uint64 {
	if x != nil {
		return x.Steamids
	}
	return nil
}

type CGCToGCMsgMasterAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DirIndex      *uint32                `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName   *string                `protobuf:"bytes,3,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	ProcessName   *string                `protobuf:"bytes,4,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	TypeInstances []uint32               `protobuf:"varint,5,rep,name=type_instances,json=typeInstances" json:"type_instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGCToGCMsgMasterAck) Reset() {
	*x = CGCToGCMsgMasterAck{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgMasterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CGCToGCMsgMasterAck) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterAck) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

func (x *CGCToGCMsgMasterAck) GetTypeInstances() []uint32 {
	if x != nil {
		return x.TypeInstances
	}
	return nil
}

type CGCToGCMsgMasterAck_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *int32                 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CGCToGCMsgMasterAck_Response fields.
const (
	Default_CGCToGCMsgMasterAck_Response_Eresult = int32(2)
)

func (x *CGCToGCMsgMasterAck_Response) Reset() {
	*x = CGCToGCMsgMasterAck_Response{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgMasterAck_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterAck_Response) ProtoMessage() {}

func (x *CGCToGCMsgMasterAck_Response) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterAck_Response.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterAck_Response) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CGCToGCMsgMasterAck_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CGCToGCMsgMasterAck_Response_Eresult
}

type CGCToGCMsgMasterStartupComplete struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	GcInfo        []*CGCToGCMsgMasterStartupComplete_GCInfo `protobuf:"bytes,1,rep,name=gc_info,json=gcInfo" json:"gc_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGCToGCMsgMasterStartupComplete) Reset() {
	*x = CGCToGCMsgMasterStartupComplete{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgMasterStartupComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CGCToGCMsgMasterStartupComplete) GetGcInfo() []*CGCToGCMsgMasterStartupComplete_GCInfo {
	if x != nil {
		return x.GcInfo
	}
	return nil
}

type CGCToGCMsgRouted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgType       *uint32                `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	SenderId      *uint64                `protobuf:"fixed64,2,opt,name=sender_id,json=senderId" json:"sender_id,omitempty"`
	NetMessage    []byte                 `protobuf:"bytes,3,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGCToGCMsgRouted) Reset() {
	*x = CGCToGCMsgRouted{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgRouted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRouted) ProtoMessage() {}

func (x *CGCToGCMsgRouted) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRouted.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRouted) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CGCToGCMsgRouted) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetSenderId() uint64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *CGCToGCMsgRouted) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CGCToGCMsgRoutedReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgType       *uint32                `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	NetMessage    []byte                 `protobuf:"bytes,2,opt,name=net_message,json=netMessage" json:"net_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGCToGCMsgRoutedReply) Reset() {
	*x = CGCToGCMsgRoutedReply{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgRoutedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgRoutedReply) ProtoMessage() {}

func (x *CGCToGCMsgRoutedReply) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgRoutedReply.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgRoutedReply) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CGCToGCMsgRoutedReply) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CGCToGCMsgRoutedReply) GetNetMessage() []byte {
	if x != nil {
		return x.NetMessage
	}
	return nil
}

type CMsgGCUpdateSubGCSessionInfo struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Updates       []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCUpdateSubGCSessionInfo) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCUpdateSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgGCUpdateSubGCSessionInfo) GetUpdates() []*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type CMsgGCRequestSubGCSessionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCRequestSubGCSessionInfo) Reset() {
	*x = CMsgGCRequestSubGCSessionInfo{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCRequestSubGCSessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfo) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfo.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgGCRequestSubGCSessionInfo) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgGCRequestSubGCSessionInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            *uint32                `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
	Trusted       *bool                  `protobuf:"varint,2,opt,name=trusted" json:"trusted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) Reset() {
	*x = CMsgGCRequestSubGCSessionInfoResponse{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCRequestSubGCSessionInfoResponse) ProtoMessage() {}

func (x *CMsgGCRequestSubGCSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCRequestSubGCSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgGCRequestSubGCSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCRequestSubGCSessionInfoResponse) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type CMsgGCToGCIncrementRecruitmentLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) Reset() {
	*x = CMsgGCToGCIncrementRecruitmentLevel{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCIncrementRecruitmentLevel) ProtoMessage() {}

func (x *CMsgGCToGCIncrementRecruitmentLevel) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCIncrementRecruitmentLevel.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCIncrementRecruitmentLevel) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgGCToGCIncrementRecruitmentLevel) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgSOCacheHaveVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Soid          *CMsgSOIDOwner         `protobuf:"bytes,1,opt,name=soid" json:"soid,omitempty"`
	Version       *uint64                `protobuf:"fixed64,2,opt,name=version" json:"version,omitempty"`
	ServiceId     *uint32                `protobuf:"varint,3,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheHaveVersion) Reset() {
	*x = CMsgSOCacheHaveVersion{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheHaveVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheHaveVersion) ProtoMessage() {}

func (x *CMsgSOCacheHaveVersion) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheHaveVersion.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheHaveVersion) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgSOCacheHaveVersion) GetSoid() *CMsgSOIDOwner {
	if x != nil {
		return x.Soid
	}
	return nil
}

func (x *CMsgSOCacheHaveVersion) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgSOCacheHaveVersion) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

type CMsgConnectionStatus struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	Status                        *GCConnectionStatus    `protobuf:"varint,1,opt,name=status,enum=GCConnectionStatus,def=0" json:"status,omitempty"`
	ClientSessionNeed             *uint32                `protobuf:"varint,2,opt,name=client_session_need,json=clientSessionNeed" json:"client_session_need,omitempty"`
	QueuePosition                 *int32                 `protobuf:"varint,3,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	QueueSize                     *int32                 `protobuf:"varint,4,opt,name=queue_size,json=queueSize" json:"queue_size,omitempty"`
	WaitSeconds                   *int32                 `protobuf:"varint,5,opt,name=wait_seconds,json=waitSeconds" json:"wait_seconds,omitempty"`
	EstimatedWaitSecondsRemaining *int32                 `protobuf:"varint,6,opt,name=estimated_wait_seconds_remaining,json=estimatedWaitSecondsRemaining" json:"estimated_wait_seconds_remaining,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

// Default values for CMsgConnectionStatus fields.
const (
	Default_CMsgConnectionStatus_Status = GCConnectionStatus_GCConnectionStatus_HAVE_SESSION
)

func (x *CMsgConnectionStatus) Reset() {
	*x = CMsgConnectionStatus{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgConnectionStatus) ProtoMessage() {}

func (x *CMsgConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgConnectionStatus.ProtoReflect.Descriptor instead.
func (*CMsgConnectionStatus) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgConnectionStatus) GetStatus() GCConnectionStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_CMsgConnectionStatus_Status
}

func (x *CMsgConnectionStatus) GetClientSessionNeed() uint32 {
	if x != nil && x.ClientSessionNeed != nil {
		return *x.ClientSessionNeed
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CMsgConnectionStatus) GetQueueSize() int32 {
	if x != nil && x.QueueSize != nil {
		return *x.QueueSize
	}
	return 0
}

func (x *CMsgConnectionStatus) GetWaitSeconds() int32 {
	if x != nil && x.WaitSeconds != nil {
		return *x.WaitSeconds
	}
	return 0
}

func (x *CMsgConnectionStatus) GetEstimatedWaitSecondsRemaining() int32 {
	if x != nil && x.EstimatedWaitSecondsRemaining != nil {
		return *x.EstimatedWaitSecondsRemaining
	}
	return 0
}

type CMsgGCToGCSOCacheSubscribe struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Subscriber    *uint64                                        `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	SubscribeTo   *uint64                                        `protobuf:"fixed64,2,opt,name=subscribe_to,json=subscribeTo" json:"subscribe_to,omitempty"`
	SyncVersion   *uint64                                        `protobuf:"fixed64,3,opt,name=sync_version,json=syncVersion" json:"sync_version,omitempty"`
	HaveVersions  []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions `protobuf:"bytes,4,rep,name=have_versions,json=haveVersions" json:"have_versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCToGCSOCacheSubscribe) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToGCSOCacheSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSubscribeTo() uint64 {
	if x != nil && x.SubscribeTo != nil {
		return *x.SubscribeTo
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetSyncVersion() uint64 {
	if x != nil && x.SyncVersion != nil {
		return *x.SyncVersion
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe) GetHaveVersions() []*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions {
	if x != nil {
		return x.HaveVersions
	}
	return nil
}

type CMsgGCToGCSOCacheUnsubscribe struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Subscriber      *uint64                `protobuf:"fixed64,1,opt,name=subscriber" json:"subscriber,omitempty"`
	UnsubscribeFrom *uint64                `protobuf:"fixed64,2,opt,name=unsubscribe_from,json=unsubscribeFrom" json:"unsubscribe_from,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgGCToGCSOCacheUnsubscribe) Reset() {
	*x = CMsgGCToGCSOCacheUnsubscribe{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToGCSOCacheUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheUnsubscribe) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheUnsubscribe.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheUnsubscribe) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetSubscriber() uint64 {
	if x != nil && x.Subscriber != nil {
		return *x.Subscriber
	}
	return 0
}

func (x *CMsgGCToGCSOCacheUnsubscribe) GetUnsubscribeFrom() uint64 {
	if x != nil && x.UnsubscribeFrom != nil {
		return *x.UnsubscribeFrom
	}
	return 0
}

type CMsgGCClientPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCClientPing) Reset() {
	*x = CMsgGCClientPing{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCClientPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClientPing) ProtoMessage() {}

func (x *CMsgGCClientPing) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClientPing.ProtoReflect.Descriptor instead.
func (*CMsgGCClientPing) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{23}
}

type CMsgSOMultipleObjects_SingleObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeId        *int32                 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData    []byte                 `protobuf:"bytes,2,opt,name=object_data,json=objectData" json:"object_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOMultipleObjects_SingleObject) Reset() {
	*x = CMsgSOMultipleObjects_SingleObject{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOMultipleObjects_SingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOMultipleObjects_SingleObject) ProtoMessage() {}

func (x *CMsgSOMultipleObjects_SingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOMultipleObjects_SingleObject.ProtoReflect.Descriptor instead.
func (*CMsgSOMultipleObjects_SingleObject) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgSOMultipleObjects_SingleObject) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOMultipleObjects_SingleObject) GetObjectData() []byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CMsgSOCacheSubscribed_SubscribedType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeId        *int32                 `protobuf:"varint,1,opt,name=type_id,json=typeId" json:"type_id,omitempty"`
	ObjectData    [][]byte               `protobuf:"bytes,2,rep,name=object_data,json=objectData" json:"object_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSOCacheSubscribed_SubscribedType) Reset() {
	*x = CMsgSOCacheSubscribed_SubscribedType{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSOCacheSubscribed_SubscribedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSOCacheSubscribed_SubscribedType) ProtoMessage() {}

func (x *CMsgSOCacheSubscribed_SubscribedType) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSOCacheSubscribed_SubscribedType.ProtoReflect.Descriptor instead.
func (*CMsgSOCacheSubscribed_SubscribedType) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetTypeId() int32 {
	if x != nil && x.TypeId != nil {
		return *x.TypeId
	}
	return 0
}

func (x *CMsgSOCacheSubscribed_SubscribedType) GetObjectData() [][]byte {
	if x != nil {
		return x.ObjectData
	}
	return nil
}

type CGCToGCMsgMasterStartupComplete_GCInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DirIndex      *uint32                `protobuf:"varint,1,opt,name=dir_index,json=dirIndex" json:"dir_index,omitempty"`
	MachineName   *string                `protobuf:"bytes,2,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) Reset() {
	*x = CGCToGCMsgMasterStartupComplete_GCInfo{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGCToGCMsgMasterStartupComplete_GCInfo) ProtoMessage() {}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGCToGCMsgMasterStartupComplete_GCInfo.ProtoReflect.Descriptor instead.
func (*CGCToGCMsgMasterStartupComplete_GCInfo) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetDirIndex() uint32 {
	if x != nil && x.DirIndex != nil {
		return *x.DirIndex
	}
	return 0
}

func (x *CGCToGCMsgMasterStartupComplete_GCInfo) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

type CMsgGCUpdateSubGCSessionInfo_CMsgUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Ip            *uint32                `protobuf:"fixed32,2,opt,name=ip" json:"ip,omitempty"`
	Trusted       *bool                  `protobuf:"varint,3,opt,name=trusted" json:"trusted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Reset() {
	*x = CMsgGCUpdateSubGCSessionInfo_CMsgUpdate{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoMessage() {}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCUpdateSubGCSessionInfo_CMsgUpdate.ProtoReflect.Descriptor instead.
func (*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

func (x *CMsgGCUpdateSubGCSessionInfo_CMsgUpdate) GetTrusted() bool {
	if x != nil && x.Trusted != nil {
		return *x.Trusted
	}
	return false
}

type CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     *uint32                `protobuf:"varint,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	Version       *uint64                `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Reset() {
	*x = CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions{}
	mi := &file_gcsdk_gcmessages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoMessage() {}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) ProtoReflect() protoreflect.Message {
	mi := &file_gcsdk_gcmessages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions.ProtoReflect.Descriptor instead.
func (*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) Descriptor() ([]byte, []int) {
	return file_gcsdk_gcmessages_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetServiceId() uint32 {
	if x != nil && x.ServiceId != nil {
		return *x.ServiceId
	}
	return 0
}

func (x *CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

var File_gcsdk_gcmessages_proto protoreflect.FileDescriptor

const file_gcsdk_gcmessages_proto_rawDesc = "" +
	"\n" +
	"\x16gcsdk_gcmessages.proto\x1a\x13steammessages.proto\"3\n" +
	"\rCMsgSOIDOwner\x12\x12\n" +
	"\x04type\x18\x01 \x01(\rR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\"\xcc\x01\n" +
	"\x12CMsgSOSingleObject\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\x12\x17\n" +
	"\atype_id\x18\x02 \x01(\x05R\x06typeId\x12\x1f\n" +
	"\vobject_data\x18\x03 \x01(\fR\n" +
	"objectData\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x06R\aversion\x12-\n" +
	"\n" +
	"owner_soid\x18\x05 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\x12\x1d\n" +
	"\n" +
	"service_id\x18\x06 \x01(\rR\tserviceId\"\x9e\x02\n" +
	"\x15CMsgSOMultipleObjects\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\x12=\n" +
	"\aobjects\x18\x02 \x03(\v2#.CMsgSOMultipleObjects.SingleObjectR\aobjects\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x06R\aversion\x12-\n" +
	"\n" +
	"owner_soid\x18\x06 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\x12\x1d\n" +
	"\n" +
	"service_id\x18\a \x01(\rR\tserviceId\x1aH\n" +
	"\fSingleObject\x12\x17\n" +
	"\atype_id\x18\x01 \x01(\x05R\x06typeId\x12\x1f\n" +
	"\vobject_data\x18\x02 \x01(\fR\n" +
	"objectData\"\xe8\x02\n" +
	"\x15CMsgSOCacheSubscribed\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\x12?\n" +
	"\aobjects\x18\x02 \x03(\v2%.CMsgSOCacheSubscribed.SubscribedTypeR\aobjects\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x06R\aversion\x12-\n" +
	"\n" +
	"owner_soid\x18\x04 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\x12\x1d\n" +
	"\n" +
	"service_id\x18\x05 \x01(\rR\tserviceId\x12!\n" +
	"\fservice_list\x18\x06 \x03(\rR\vserviceList\x12!\n" +
	"\fsync_version\x18\a \x01(\x06R\vsyncVersion\x1aJ\n" +
	"\x0eSubscribedType\x12\x17\n" +
	"\atype_id\x18\x01 \x01(\x05R\x06typeId\x12\x1f\n" +
	"\vobject_data\x18\x02 \x03(\fR\n" +
	"objectData\"\xcd\x01\n" +
	"\x1dCMsgSOCacheSubscribedUpToDate\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x06R\aversion\x12-\n" +
	"\n" +
	"owner_soid\x18\x02 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\x12\x1d\n" +
	"\n" +
	"service_id\x18\x03 \x01(\rR\tserviceId\x12!\n" +
	"\fservice_list\x18\x04 \x03(\rR\vserviceList\x12!\n" +
	"\fsync_version\x18\x05 \x01(\x06R\vsyncVersion\"/\n" +
	"\x17CMsgSOCacheUnsubscribed\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\"\xe2\x01\n" +
	"\x1cCMsgSOCacheSubscriptionCheck\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x06R\aversion\x12-\n" +
	"\n" +
	"owner_soid\x18\x03 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\rR\tserviceId\x12!\n" +
	"\fservice_list\x18\x05 \x03(\rR\vserviceList\x12!\n" +
	"\fsync_version\x18\x06 \x01(\x06R\vsyncVersion\"e\n" +
	"\x1eCMsgSOCacheSubscriptionRefresh\x12\x14\n" +
	"\x05owner\x18\x01 \x01(\x06R\x05owner\x12-\n" +
	"\n" +
	"owner_soid\x18\x02 \x01(\v2\x0e.CMsgSOIDOwnerR\townerSoid\".\n" +
	"\x12CMsgSOCacheVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x06R\aversion\"h\n" +
	"\x16CMsgGCMultiplexMessage\x12\x18\n" +
	"\amsgtype\x18\x01 \x01(\rR\amsgtype\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12\x1a\n" +
	"\bsteamids\x18\x03 \x03(\x06R\bsteamids\"\x9f\x01\n" +
	"\x13CGCToGCMsgMasterAck\x12\x1b\n" +
	"\tdir_index\x18\x01 \x01(\rR\bdirIndex\x12!\n" +
	"\fmachine_name\x18\x03 \x01(\tR\vmachineName\x12!\n" +
	"\fprocess_name\x18\x04 \x01(\tR\vprocessName\x12%\n" +
	"\x0etype_instances\x18\x05 \x03(\rR\rtypeInstances\";\n" +
	"\x1cCGCToGCMsgMasterAck_Response\x12\x1b\n" +
	"\aeresult\x18\x01 \x01(\x05:\x012R\aeresult\"\xad\x01\n" +
	"\x1fCGCToGCMsgMasterStartupComplete\x12@\n" +
	"\agc_info\x18\x01 \x03(\v2'.CGCToGCMsgMasterStartupComplete.GCInfoR\x06gcInfo\x1aH\n" +
	"\x06GCInfo\x12\x1b\n" +
	"\tdir_index\x18\x01 \x01(\rR\bdirIndex\x12!\n" +
	"\fmachine_name\x18\x02 \x01(\tR\vmachineName\"k\n" +
	"\x10CGCToGCMsgRouted\x12\x19\n" +
	"\bmsg_type\x18\x01 \x01(\rR\amsgType\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\x06R\bsenderId\x12\x1f\n" +
	"\vnet_message\x18\x03 \x01(\fR\n" +
	"netMessage\"S\n" +
	"\x15CGCToGCMsgRoutedReply\x12\x19\n" +
	"\bmsg_type\x18\x01 \x01(\rR\amsgType\x12\x1f\n" +
	"\vnet_message\x18\x02 \x01(\fR\n" +
	"netMessage\"\xb4\x01\n" +
	"\x1cCMsgGCUpdateSubGCSessionInfo\x12B\n" +
	"\aupdates\x18\x01 \x03(\v2(.CMsgGCUpdateSubGCSessionInfo.CMsgUpdateR\aupdates\x1aP\n" +
	"\n" +
	"CMsgUpdate\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\aR\x02ip\x12\x18\n" +
	"\atrusted\x18\x03 \x01(\bR\atrusted\"9\n" +
	"\x1dCMsgGCRequestSubGCSessionInfo\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\"Q\n" +
	"%CMsgGCRequestSubGCSessionInfoResponse\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\aR\x02ip\x12\x18\n" +
	"\atrusted\x18\x02 \x01(\bR\atrusted\"?\n" +
	"#CMsgGCToGCIncrementRecruitmentLevel\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\"u\n" +
	"\x16CMsgSOCacheHaveVersion\x12\"\n" +
	"\x04soid\x18\x01 \x01(\v2\x0e.CMsgSOIDOwnerR\x04soid\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x06R\aversion\x12\x1d\n" +
	"\n" +
	"service_id\x18\x03 \x01(\rR\tserviceId\"\xc6\x02\n" +
	"\x14CMsgConnectionStatus\x12L\n" +
	"\x06status\x18\x01 \x01(\x0e2\x13.GCConnectionStatus:\x1fGCConnectionStatus_HAVE_SESSIONR\x06status\x12.\n" +
	"\x13client_session_need\x18\x02 \x01(\rR\x11clientSessionNeed\x12%\n" +
	"\x0equeue_position\x18\x03 \x01(\x05R\rqueuePosition\x12\x1d\n" +
	"\n" +
	"queue_size\x18\x04 \x01(\x05R\tqueueSize\x12!\n" +
	"\fwait_seconds\x18\x05 \x01(\x05R\vwaitSeconds\x12G\n" +
	" estimated_wait_seconds_remaining\x18\x06 \x01(\x05R\x1destimatedWaitSecondsRemaining\"\xa2\x02\n" +
	"\x1aCMsgGCToGCSOCacheSubscribe\x12\x1e\n" +
	"\n" +
	"subscriber\x18\x01 \x01(\x06R\n" +
	"subscriber\x12!\n" +
	"\fsubscribe_to\x18\x02 \x01(\x06R\vsubscribeTo\x12!\n" +
	"\fsync_version\x18\x03 \x01(\x06R\vsyncVersion\x12Q\n" +
	"\rhave_versions\x18\x04 \x03(\v2,.CMsgGCToGCSOCacheSubscribe.CMsgHaveVersionsR\fhaveVersions\x1aK\n" +
	"\x10CMsgHaveVersions\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\rR\tserviceId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x04R\aversion\"i\n" +
	"\x1cCMsgGCToGCSOCacheUnsubscribe\x12\x1e\n" +
	"\n" +
	"subscriber\x18\x01 \x01(\x06R\n" +
	"subscriber\x12)\n" +
	"\x10unsubscribe_from\x18\x02 \x01(\x06R\x0funsubscribeFrom\"\x12\n" +
	"\x10CMsgGCClientPing*T\n" +
	"\x12PartnerAccountType\x12\x10\n" +
	"\fPARTNER_NONE\x10\x00\x12\x19\n" +
	"\x15PARTNER_PERFECT_WORLD\x10\x01\x12\x11\n" +
	"\rPARTNER_NEXON\x10\x02*\xf7\x01\n" +
	"\x12GCConnectionStatus\x12#\n" +
	"\x1fGCConnectionStatus_HAVE_SESSION\x10\x00\x12$\n" +
	" GCConnectionStatus_GC_GOING_DOWN\x10\x01\x12!\n" +
	"\x1dGCConnectionStatus_NO_SESSION\x10\x02\x120\n" +
	",GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE\x10\x03\x12\x1f\n" +
	"\x1bGCConnectionStatus_NO_STEAM\x10\x04\x12 \n" +
	"\x1cGCConnectionStatus_SUSPENDED\x10\x05B\x05H\x01\x80\x01\x00"

var (
	file_gcsdk_gcmessages_proto_rawDescOnce sync.Once
	file_gcsdk_gcmessages_proto_rawDescData []byte
)

func file_gcsdk_gcmessages_proto_rawDescGZIP() []byte {
	file_gcsdk_gcmessages_proto_rawDescOnce.Do(func() {
		file_gcsdk_gcmessages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gcsdk_gcmessages_proto_rawDesc), len(file_gcsdk_gcmessages_proto_rawDesc)))
	})
	return file_gcsdk_gcmessages_proto_rawDescData
}

var file_gcsdk_gcmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gcsdk_gcmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_gcsdk_gcmessages_proto_goTypes = []any{
	(PartnerAccountType)(0),                             // 0: PartnerAccountType
	(GCConnectionStatus)(0),                             // 1: GCConnectionStatus
	(*CMsgSOIDOwner)(nil),                               // 2: CMsgSOIDOwner
	(*CMsgSOSingleObject)(nil),                          // 3: CMsgSOSingleObject
	(*CMsgSOMultipleObjects)(nil),                       // 4: CMsgSOMultipleObjects
	(*CMsgSOCacheSubscribed)(nil),                       // 5: CMsgSOCacheSubscribed
	(*CMsgSOCacheSubscribedUpToDate)(nil),               // 6: CMsgSOCacheSubscribedUpToDate
	(*CMsgSOCacheUnsubscribed)(nil),                     // 7: CMsgSOCacheUnsubscribed
	(*CMsgSOCacheSubscriptionCheck)(nil),                // 8: CMsgSOCacheSubscriptionCheck
	(*CMsgSOCacheSubscriptionRefresh)(nil),              // 9: CMsgSOCacheSubscriptionRefresh
	(*CMsgSOCacheVersion)(nil),                          // 10: CMsgSOCacheVersion
	(*CMsgGCMultiplexMessage)(nil),                      // 11: CMsgGCMultiplexMessage
	(*CGCToGCMsgMasterAck)(nil),                         // 12: CGCToGCMsgMasterAck
	(*CGCToGCMsgMasterAck_Response)(nil),                // 13: CGCToGCMsgMasterAck_Response
	(*CGCToGCMsgMasterStartupComplete)(nil),             // 14: CGCToGCMsgMasterStartupComplete
	(*CGCToGCMsgRouted)(nil),                            // 15: CGCToGCMsgRouted
	(*CGCToGCMsgRoutedReply)(nil),                       // 16: CGCToGCMsgRoutedReply
	(*CMsgGCUpdateSubGCSessionInfo)(nil),                // 17: CMsgGCUpdateSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfo)(nil),               // 18: CMsgGCRequestSubGCSessionInfo
	(*CMsgGCRequestSubGCSessionInfoResponse)(nil),       // 19: CMsgGCRequestSubGCSessionInfoResponse
	(*CMsgGCToGCIncrementRecruitmentLevel)(nil),         // 20: CMsgGCToGCIncrementRecruitmentLevel
	(*CMsgSOCacheHaveVersion)(nil),                      // 21: CMsgSOCacheHaveVersion
	(*CMsgConnectionStatus)(nil),                        // 22: CMsgConnectionStatus
	(*CMsgGCToGCSOCacheSubscribe)(nil),                  // 23: CMsgGCToGCSOCacheSubscribe
	(*CMsgGCToGCSOCacheUnsubscribe)(nil),                // 24: CMsgGCToGCSOCacheUnsubscribe
	(*CMsgGCClientPing)(nil),                            // 25: CMsgGCClientPing
	(*CMsgSOMultipleObjects_SingleObject)(nil),          // 26: CMsgSOMultipleObjects.SingleObject
	(*CMsgSOCacheSubscribed_SubscribedType)(nil),        // 27: CMsgSOCacheSubscribed.SubscribedType
	(*CGCToGCMsgMasterStartupComplete_GCInfo)(nil),      // 28: CGCToGCMsgMasterStartupComplete.GCInfo
	(*CMsgGCUpdateSubGCSessionInfo_CMsgUpdate)(nil),     // 29: CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	(*CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions)(nil), // 30: CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
}
var file_gcsdk_gcmessages_proto_depIdxs = []int32{
	2,  // 0: CMsgSOSingleObject.owner_soid:type_name -> CMsgSOIDOwner
	26, // 1: CMsgSOMultipleObjects.objects:type_name -> CMsgSOMultipleObjects.SingleObject
	2,  // 2: CMsgSOMultipleObjects.owner_soid:type_name -> CMsgSOIDOwner
	27, // 3: CMsgSOCacheSubscribed.objects:type_name -> CMsgSOCacheSubscribed.SubscribedType
	2,  // 4: CMsgSOCacheSubscribed.owner_soid:type_name -> CMsgSOIDOwner
	2,  // 5: CMsgSOCacheSubscribedUpToDate.owner_soid:type_name -> CMsgSOIDOwner
	2,  // 6: CMsgSOCacheSubscriptionCheck.owner_soid:type_name -> CMsgSOIDOwner
	2,  // 7: CMsgSOCacheSubscriptionRefresh.owner_soid:type_name -> CMsgSOIDOwner
	28, // 8: CGCToGCMsgMasterStartupComplete.gc_info:type_name -> CGCToGCMsgMasterStartupComplete.GCInfo
	29, // 9: CMsgGCUpdateSubGCSessionInfo.updates:type_name -> CMsgGCUpdateSubGCSessionInfo.CMsgUpdate
	2,  // 10: CMsgSOCacheHaveVersion.soid:type_name -> CMsgSOIDOwner
	1,  // 11: CMsgConnectionStatus.status:type_name -> GCConnectionStatus
	30, // 12: CMsgGCToGCSOCacheSubscribe.have_versions:type_name -> CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_gcsdk_gcmessages_proto_init() }
func file_gcsdk_gcmessages_proto_init() {
	if File_gcsdk_gcmessages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcsdk_gcmessages_proto_rawDesc), len(file_gcsdk_gcmessages_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gcsdk_gcmessages_proto_goTypes,
		DependencyIndexes: file_gcsdk_gcmessages_proto_depIdxs,
		EnumInfos:         file_gcsdk_gcmessages_proto_enumTypes,
		MessageInfos:      file_gcsdk_gcmessages_proto_msgTypes,
	}.Build()
	File_gcsdk_gcmessages_proto = out.File
	file_gcsdk_gcmessages_proto_goTypes = nil
	file_gcsdk_gcmessages_proto_depIdxs = nil
}
